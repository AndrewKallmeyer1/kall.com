{"ast":null,"code":"import { mediaProviderElementContext } from \"./chunk.APMKZUJJ.js\";\nimport { mediaProviderDiscoveryId } from \"./chunk.BJN6YOPG.js\";\nimport { mediaStoreContext, mediaStoreSubscription, resetMediaStore, softResetMediaStore } from \"./chunk.O2H47C42.js\";\nimport { __decorateClass } from \"./chunk.LNH2V2XS.js\";\n\n// src/media/controller/UserIdleController.ts\nimport { DisposalBin, listen, vdsEvent } from \"@vidstack/foundation\";\nvar UserIdleController = class {\n  constructor(_host, _mediaStore) {\n    this._host = _host;\n    this._mediaStore = _mediaStore;\n    this._idle = false;\n    this._mediaPaused = false;\n    this._idlingPaused = false;\n    this._disposal = new DisposalBin();\n    this.delay = 2e3;\n    _host.addController(this);\n  }\n  get paused() {\n    return this._idlingPaused || this._mediaPaused;\n  }\n  set paused(paused) {\n    this._idlingPaused = paused;\n    this._handleIdleChange();\n  }\n  hostConnected() {\n    this._disposal.add(this._mediaStore.paused.subscribe($paused => {\n      this._mediaPaused = $paused;\n      this._handleIdleChange();\n    }));\n    const startIdleTimerEvents = [\"pointerdown\", \"pointermove\", \"focus\", \"keydown\"];\n    startIdleTimerEvents.forEach(eventType => {\n      const off = listen(this._host, eventType, this._handleIdleChange.bind(this));\n      this._disposal.add(off);\n    });\n  }\n  hostDisconnected() {\n    this._disposal.empty();\n    this._stopIdleTimer();\n  }\n  _handleIdleChange() {\n    if (this.paused) {\n      this._stopIdleTimer();\n    } else {\n      this._startIdleTimer();\n    }\n  }\n  _startIdleTimer() {\n    this._stopIdleTimer();\n    this._idleTimeout = window.setTimeout(() => {\n      this._dispatchIdleChange(!this.paused);\n    }, this.delay);\n  }\n  _stopIdleTimer() {\n    window.clearTimeout(this._idleTimeout);\n    this._dispatchIdleChange(false);\n  }\n  _dispatchIdleChange(isIdle) {\n    if (this._idle !== isIdle) {\n      this._host.dispatchEvent(vdsEvent(\"vds-user-idle-change\", {\n        detail: isIdle\n      }));\n      this._idle = isIdle;\n    }\n  }\n};\n\n// src/media/controller/MediaController.ts\nimport { appendTriggerEvent, copyStoreRecords, debounce, discover, DisposalBin as DisposalBin2, eventListener, isNil, keysOf, listen as listen2, LogController, LogDispatcher, RequestQueue, throttle, unwrapStoreRecord, vdsEvent as vdsEvent2 } from \"@vidstack/foundation\";\nvar MediaController = class {\n  constructor(_host) {\n    this._host = _host;\n    this._disconnectDisposal = new DisposalBin2();\n    this.providerQueue = new RequestQueue();\n    this.providerDisposal = new DisposalBin2();\n    this._logController = true ? new LogController(this._host) : void 0;\n    this._logger = true ? new LogDispatcher(this._host) : void 0;\n    this._providerContext = mediaProviderElementContext.provide(this._host);\n    this._mediaStoreProvider = mediaStoreContext.provide(this._host);\n    this.state = unwrapStoreRecord(this._store);\n    this._userIdleController = new UserIdleController(this._host, this._store);\n    this._handleIdleChange = eventListener(this._host, \"vds-user-idle-change\", event => {\n      this._store.userIdle.set(event.detail);\n      this._satisfyMediaRequest(\"userIdle\", event);\n    });\n    this._pendingMediaRequests = {\n      loading: [],\n      play: [],\n      pause: [],\n      volume: [],\n      fullscreen: [],\n      seeked: [],\n      seeking: [],\n      userIdle: []\n    };\n    this._handleStartLoadingRequest = eventListener(this._host, \"vds-start-loading\", this._createMediaRequestHandler(\"loading\", event => {\n      if (this.state.canLoad) return;\n      this._pendingMediaRequests.loading.push(event);\n      this._provider.startLoadingMedia();\n    }));\n    this._handleMuteRequest = eventListener(this._host, \"vds-mute-request\", this._createMediaRequestHandler(\"muted\", event => {\n      if (this.state.muted) return;\n      this._pendingMediaRequests.volume.push(event);\n      this.provider.muted = true;\n    }));\n    this._handleUnmuteRequest = eventListener(this._host, \"vds-unmute-request\", this._createMediaRequestHandler(\"muted\", event => {\n      if (!this.state.muted) return;\n      this._pendingMediaRequests.volume.push(event);\n      this.provider.muted = false;\n      if (this.state.volume === 0) {\n        this._pendingMediaRequests.volume.push(event);\n        this.provider.volume = 0.25;\n      }\n    }));\n    this._handlePlayRequest = eventListener(this._host, \"vds-play-request\", this._createMediaRequestHandler(\"paused\", event => {\n      if (!this.state.paused) return;\n      this._pendingMediaRequests.play.push(event);\n      this.provider.paused = false;\n    }));\n    this._handlePauseRequest = eventListener(this._host, \"vds-pause-request\", this._createMediaRequestHandler(\"paused\", event => {\n      if (this.state.paused) return;\n      this._pendingMediaRequests.pause.push(event);\n      this.provider.paused = true;\n    }));\n    this._isSeekingRequestPending = false;\n    this._handleSeekingRequest = eventListener(this._host, \"vds-seeking-request\", this._createMediaRequestHandler(\"seeking\", event => {\n      this._stopWaiting();\n      this._pendingMediaRequests.seeking.push(event);\n      this._isSeekingRequestPending = true;\n      this._store.seeking.set(true);\n    }));\n    this._handleSeekRequest = eventListener(this._host, \"vds-seek-request\", this._createMediaRequestHandler(\"seeking\", event => {\n      if (this.store.ended) {\n        this._isReplay = true;\n      }\n      this._pendingMediaRequests.seeked.push(event);\n      this._isSeekingRequestPending = false;\n      let time = event.detail;\n      if (this.state.duration - event.detail < 0.25) {\n        time = this.state.duration;\n      }\n      this.provider.currentTime = time;\n    }));\n    this._handleVolumeChangeRequest = eventListener(this._host, \"vds-volume-change-request\", this._createMediaRequestHandler(\"volume\", event => {\n      const volume = event.detail;\n      if (this.state.volume === volume) return;\n      this._pendingMediaRequests.volume.push(event);\n      this.provider.volume = volume;\n      if (volume > 0 && this.state.muted) {\n        this._pendingMediaRequests.volume.push(event);\n        this.provider.muted = false;\n      }\n    }));\n    this._handleEnterFullscreenRequest = eventListener(this._host, \"vds-enter-fullscreen-request\", this._createMediaRequestHandler(\"fullscreen\", async event => {\n      if (this.state.fullscreen) return;\n      const target = event.detail ?? \"media\";\n      if (target === \"media\" && this._host.canFullscreen) {\n        this._pendingMediaRequests.fullscreen.push(event);\n        await this._host.enterFullscreen?.();\n      } else if (this.provider) {\n        this._pendingMediaRequests.fullscreen.push(event);\n        await this.provider.enterFullscreen();\n      }\n    }));\n    this._handleExitFullscreenRequest = eventListener(this._host, \"vds-exit-fullscreen-request\", this._createMediaRequestHandler(\"fullscreen\", async event => {\n      if (!this.state.fullscreen) return;\n      const target = event.detail ?? \"media\";\n      if (target === \"media\" && this._host.canFullscreen) {\n        this._pendingMediaRequests.fullscreen.push(event);\n        await this._host.exitFullscreen?.();\n      } else if (this.provider) {\n        this._pendingMediaRequests.fullscreen.push(event);\n        await this.provider.exitFullscreen();\n      }\n    }));\n    this._handleResumeIdlingRequest = eventListener(this._host, \"vds-resume-user-idle-request\", event => {\n      if (!this._mediaRequestEventGateway(event)) return;\n      this._pendingMediaRequests.userIdle.push(event);\n      this._userIdleController.paused = false;\n    });\n    this._handlePauseIdlingRequest = eventListener(this._host, \"vds-pause-user-idle-request\", event => {\n      if (!this._mediaRequestEventGateway(event)) return;\n      this._pendingMediaRequests.userIdle.push(event);\n      this._userIdleController.paused = true;\n    });\n    this._handleShowPosterRequest = eventListener(this._host, \"vds-show-poster-request\", this._createMediaRequestHandler(\"poster\", () => {\n      this._provider.canLoadPoster = true;\n    }));\n    this._handleHidePosterRequest = eventListener(this._host, \"vds-hide-poster-request\", this._createMediaRequestHandler(\"poster\", () => {\n      this._provider.canLoadPoster = false;\n    }));\n    this._handleLoopRequest = this._createMediaRequestHandler(\"loop\", () => {\n      window.requestAnimationFrame(async () => {\n        try {\n          this._isLooping = true;\n          this._isReplay = true;\n          await this._provider.play();\n        } catch (e) {\n          this._isReplay = false;\n          this._isLooping = false;\n        }\n      });\n    });\n    this._handleFullscreenChange = eventListener(this._host, \"vds-fullscreen-change\", event => {\n      this._store.fullscreen.set(event.detail);\n      if (event.target !== this._host) return;\n      this._satisfyMediaRequest(\"fullscreen\", event);\n      this._provider?.dispatchEvent(vdsEvent2(\"vds-fullscreen-change\", {\n        detail: event.detail,\n        triggerEvent: event\n      }));\n    });\n    this._handleFullscreenError = eventListener(this._host, \"vds-fullscreen-error\", event => {\n      if (event.target !== this._host) return;\n      this._satisfyMediaRequest(\"fullscreen\", event);\n      this._provider?.dispatchEvent(vdsEvent2(\"vds-fullscreen-error\", {\n        detail: event.detail,\n        triggerEvent: event\n      }));\n    });\n    this._isReplay = false;\n    this._isLooping = false;\n    this._firingWaiting = false;\n    this._mediaEvents = [];\n    this._handleSeeking = throttle(event => {\n      this._mediaEvents.push(event);\n      this._store.seeking.set(true);\n      this._store.currentTime.set(event.detail);\n      this._satisfyMediaRequest(\"seeking\", event);\n    }, 150, {\n      leading: true\n    });\n    this._fireWaiting = debounce(() => {\n      if (!this._originalWaitingEvent) return;\n      this._firingWaiting = true;\n      const event = vdsEvent2(\"vds-waiting\", this._originalWaitingEvent);\n      this._mediaEvents.push(event);\n      this._store.waiting.set(true);\n      this._store.playing.set(false);\n      this._provider?.dispatchEvent(event);\n      this._originalWaitingEvent = void 0;\n      this._firingWaiting = false;\n    }, 300);\n    this._skipInitialSrcChange = true;\n    discover(_host, mediaProviderDiscoveryId, (provider, onDisconnect) => {\n      this.attachMediaProvider(provider, onDisconnect);\n    });\n    _host.addController({\n      hostConnected: () => {\n        if (!this.state.canPlay) {\n          this._host.setAttribute(\"aria-busy\", \"true\");\n        }\n      },\n      hostDisconnected: () => {\n        this._clearMediaStateTracking();\n        this._clearPendingMediaRequests();\n        this.providerQueue.destroy();\n        this.providerDisposal.empty();\n        this._skipInitialSrcChange = true;\n        this._disconnectDisposal.empty();\n      }\n    });\n  }\n  get logLevel() {\n    return this._logController?.logLevel ?? \"silent\";\n  }\n  set logLevel(level) {\n    if (true) {\n      this._logController.logLevel = level;\n    }\n  }\n  get provider() {\n    return this._provider;\n  }\n  attachMediaProvider(provider, onDisconnect) {\n    if (!isNil(this.provider) || this.provider === provider) return;\n    this._handleMediaProviderDisconnect();\n    this._provider = provider;\n    this._providerContext.value.set(provider);\n    copyStoreRecords(this._provider._store, this._store);\n    this._attachMediaEventListeners();\n    provider.attachMediaController(this, cb => this._disconnectDisposal.add(cb));\n    this._flushMediaProviderConnectedQueue();\n    onDisconnect(this._handleMediaProviderDisconnect.bind(this));\n  }\n  _handleMediaProviderDisconnect() {\n    if (isNil(this.provider)) return;\n    this._stopWaiting();\n    this.providerQueue.destroy();\n    this.providerDisposal.empty();\n    this._provider = void 0;\n    this._providerContext.value.set(void 0);\n    resetMediaStore(this._store);\n    this._store.viewType.set(\"unknown\" /* Unknown */);\n  }\n  _flushMediaProviderConnectedQueue() {\n    this.providerQueue.start();\n    this.providerDisposal.add(() => {\n      this.providerQueue.stop();\n    });\n  }\n  get store() {\n    return this._mediaStoreProvider.value;\n  }\n  get _store() {\n    return this._mediaStoreProvider.value;\n  }\n  get idleDelay() {\n    return this._userIdleController.delay;\n  }\n  set idleDelay(delay) {\n    this._userIdleController.delay = delay;\n  }\n  _clearPendingMediaRequests() {\n    keysOf(this._pendingMediaRequests).forEach(key => {\n      this._pendingMediaRequests[key] = [];\n    });\n  }\n  _satisfyMediaRequest(type, event) {\n    const requestEvent = this._pendingMediaRequests[type].shift();\n    if (requestEvent) {\n      event.requestEvent = requestEvent;\n      appendTriggerEvent(event, requestEvent);\n    }\n  }\n  _mediaRequestEventGateway(event) {\n    event.stopPropagation();\n    if (true) {\n      this._logger?.infoGroup(`\\u{1F4EC} received \\`${event.type}\\``).labelledLog(\"Request\", event).dispatch();\n    }\n    return true;\n  }\n  _createMediaRequestHandler(queueKey, callback) {\n    return event => {\n      if (!this._mediaRequestEventGateway(event)) return;\n      if (this._provider) {\n        callback(event);\n        return;\n      }\n      this.providerQueue.queue(queueKey, () => {\n        callback(event);\n      });\n    };\n  }\n  _attachMediaEventListeners() {\n    if (!this._provider) return;\n    const mediaEventListeners = {\n      \"vds-can-load\": this._handleCanLoad,\n      \"vds-load-start\": this._handleLoadStart,\n      \"vds-loaded-data\": this._handleLoadedData,\n      \"vds-loaded-metadata\": this._handleLoadedMetadata,\n      \"vds-can-play\": this._handleCanPlay,\n      \"vds-can-play-through\": this._handleCanPlayThrough,\n      \"vds-current-src-change\": this._handleCurrentSrcChange,\n      \"vds-autoplay\": this._handleAutoplay,\n      \"vds-autoplay-fail\": this._handleAutoplayFail,\n      \"vds-loop-request\": this._handleLoopRequest,\n      \"vds-play\": this._handlePlay,\n      \"vds-play-fail\": this._handlePlayFail,\n      \"vds-playing\": this._handlePlaying,\n      \"vds-pause\": this._handlePause,\n      \"vds-time-update\": this._handleTimeUpdate,\n      \"vds-volume-change\": this._handleVolumeChange,\n      \"vds-seeking\": this._handleSeeking,\n      \"vds-seeked\": this._handleSeeked,\n      \"vds-waiting\": this._handleWaiting,\n      \"vds-ended\": this._handleEnded,\n      \"vds-autoplay-change\": this._handleAutoplayChange,\n      \"vds-error\": this._handleError,\n      \"vds-fullscreen-support-change\": this._handleFullscreenSupportChange,\n      \"vds-poster-change\": this._handlePosterChange,\n      \"vds-loop-change\": this._handleLoopChange,\n      \"vds-playsinline-change\": this._handlePlaysinlineChange,\n      \"vds-controls-change\": this._handleControlsChange,\n      \"vds-media-type-change\": this._handleMediaTypeChange,\n      \"vds-view-type-change\": this._handleViewTypeChange,\n      \"vds-duration-change\": this._handleDurationChange,\n      \"vds-progress\": this._handleProgress,\n      \"vds-src-change\": this._handleSrcChange\n    };\n    for (const eventType of keysOf(mediaEventListeners)) {\n      const handler = mediaEventListeners[eventType].bind(this);\n      this.providerDisposal.add(listen2(this._provider, eventType, handler));\n    }\n  }\n  _clearMediaStateTracking() {\n    this._isReplay = false;\n    this._isLooping = false;\n    this._firingWaiting = false;\n    this._originalWaitingEvent = void 0;\n    this._mediaEvents = [];\n  }\n  _findLastMediaEvent(eventType) {\n    return this._mediaEvents[this._mediaEvents.map(e => e.type).lastIndexOf(eventType)];\n  }\n  _handleCanLoad(event) {\n    this._store.canLoad.set(true);\n    this._mediaEvents.push(event);\n    this._satisfyMediaRequest(\"loading\", event);\n  }\n  _updateMetadata(metadata) {\n    this._store.currentSrc.set(metadata.currentSrc);\n    this._store.mediaType.set(metadata.mediaType);\n    this._store.viewType.set(metadata.viewType);\n  }\n  _handleLoadStart(event) {\n    this._updateMetadata(event.detail);\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-src-change\"));\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-can-load\"));\n  }\n  _handleLoadedData(event) {\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-load-start\"));\n  }\n  _handleLoadedMetadata(event) {\n    this._updateMetadata(event.detail);\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-load-start\"));\n  }\n  _handleCanPlay(event) {\n    this._mediaEvents.push(event);\n    if (event.triggerEvent?.type !== \"loadedmetadata\") {\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-loaded-metadata\"));\n    }\n    this._store.canPlay.set(true);\n    this._store.duration.set(event.detail.duration);\n    this._host.setAttribute(\"aria-busy\", \"false\");\n  }\n  _handleCanPlayThrough(event) {\n    this._store.canPlay.set(true);\n    this._store.duration.set(event.detail.duration);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-can-play\"));\n  }\n  _handleAutoplay(event) {\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-play\"));\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-can-play\"));\n    this._store.autoplayError.set(void 0);\n  }\n  _handleAutoplayFail(event) {\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-play-fail\"));\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-can-play\"));\n    this._store.autoplayError.set(event.detail);\n    this._clearMediaStateTracking();\n  }\n  _handlePlay(event) {\n    if (this._isLooping || !this.state.paused) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-waiting\"));\n    this._satisfyMediaRequest(\"play\", event);\n    this._store.paused.set(false);\n    this._store.autoplayError.set(void 0);\n    if (this.state.ended || this._isReplay) {\n      this._isReplay = false;\n      this._store.ended.set(false);\n      const replayEvent = vdsEvent2(\"vds-replay\", {\n        triggerEvent: event\n      });\n      this._provider?.dispatchEvent(replayEvent);\n    }\n  }\n  _handlePlayFail(event) {\n    this._mediaEvents.push(event);\n    this._stopWaiting();\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-play\"));\n    this._store.paused.set(true);\n    this._store.playing.set(false);\n    this._satisfyMediaRequest(\"play\", event);\n    this._clearMediaStateTracking();\n  }\n  _handlePlaying(event) {\n    this._mediaEvents.push(event);\n    const playEvent = this._findLastMediaEvent(\"vds-play\");\n    if (playEvent) {\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-waiting\"));\n      appendTriggerEvent(event, playEvent);\n    } else {\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-seeked\"));\n    }\n    this._stopWaiting();\n    this._clearMediaStateTracking();\n    this._store.paused.set(false);\n    this._store.playing.set(true);\n    this._store.seeking.set(false);\n    this._store.ended.set(false);\n    if (this._isLooping) {\n      event.stopImmediatePropagation();\n      this._isLooping = false;\n      return;\n    }\n    if (!this.state.started) {\n      this._store.started.set(true);\n      this._provider?.dispatchEvent(vdsEvent2(\"vds-started\", {\n        triggerEvent: event\n      }));\n    }\n  }\n  _handlePause(event) {\n    if (this._isLooping) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-seeked\"));\n    this._satisfyMediaRequest(\"pause\", event);\n    this._store.paused.set(true);\n    this._store.playing.set(false);\n    this._store.seeking.set(false);\n    this._stopWaiting();\n    this._clearMediaStateTracking();\n  }\n  _handleTimeUpdate(event) {\n    const {\n      currentTime,\n      played\n    } = event.detail;\n    this._store.currentTime.set(currentTime);\n    this._store.played.set(played);\n    this._store.waiting.set(false);\n  }\n  _handleVolumeChange(event) {\n    this._store.volume.set(event.detail.volume);\n    this._store.muted.set(event.detail.muted || event.detail.volume === 0);\n    this._satisfyMediaRequest(\"volume\", event);\n  }\n  _handleSeeked(event) {\n    if (this._isSeekingRequestPending) {\n      this._store.seeking.set(true);\n      event.stopImmediatePropagation();\n    } else if (this.state.seeking) {\n      this._mediaEvents.push(event);\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-waiting\"));\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-seeking\"));\n      if (this.state.paused) {\n        this._stopWaiting();\n      }\n      this._store.seeking.set(false);\n      if (event.detail !== this.state.duration) {\n        this._store.ended.set(false);\n      }\n      this._store.currentTime.set(event.detail);\n      this._satisfyMediaRequest(\"seeked\", event);\n    }\n  }\n  _stopWaiting() {\n    this._fireWaiting.cancel();\n    this._store.waiting.set(false);\n  }\n  _handleWaiting(event) {\n    if (this._firingWaiting) return;\n    event.stopImmediatePropagation();\n    this._originalWaitingEvent = event;\n    this._fireWaiting();\n  }\n  _handleEnded(event) {\n    if (this._isLooping) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    this._stopWaiting();\n    this._store.paused.set(true);\n    this._store.playing.set(false);\n    this._store.seeking.set(false);\n    this._store.ended.set(true);\n    this._clearMediaStateTracking();\n  }\n  _handleAutoplayChange(event) {\n    this._store.autoplay.set(event.detail);\n  }\n  _handleCurrentSrcChange(event) {\n    this._store.currentSrc.set(event.detail);\n    if (this._skipInitialSrcChange) {\n      this._skipInitialSrcChange = false;\n      return;\n    }\n    this._clearMediaStateTracking();\n    softResetMediaStore(this._store);\n    this._host.setAttribute(\"aria-busy\", \"true\");\n  }\n  _handleError(event) {\n    this._store.error.set(event.detail);\n  }\n  _handleFullscreenSupportChange(event) {\n    this._store.canFullscreen.set(event.detail);\n  }\n  _handlePosterChange(event) {\n    this._store.poster.set(event.detail);\n  }\n  _handleLoopChange(event) {\n    this._store.loop.set(event.detail);\n  }\n  _handlePlaysinlineChange(event) {\n    this._store.playsinline.set(event.detail);\n  }\n  _handleControlsChange(event) {\n    this._store.controls.set(event.detail);\n  }\n  _handleMediaTypeChange(event) {\n    this._store.mediaType.set(event.detail);\n  }\n  _handleDurationChange(event) {\n    const duration = event.detail;\n    this._store.duration.set(!isNaN(duration) ? duration : 0);\n  }\n  _handleProgress(event) {\n    const {\n      buffered,\n      seekable\n    } = event.detail;\n    const bufferedAmount = buffered.length === 0 ? 0 : buffered.end(buffered.length - 1);\n    const seekableAmount = seekable.length === 0 ? 0 : seekable.end(seekable.length - 1);\n    this._store.buffered.set(buffered);\n    this._store.bufferedAmount.set(bufferedAmount);\n    this._store.seekable.set(seekable);\n    this._store.seekableAmount.set(seekableAmount);\n  }\n  _handleSrcChange(event) {\n    this._store.src.set(event.detail);\n  }\n  _handleViewTypeChange(event) {\n    this._store.viewType.set(event.detail);\n  }\n};\n\n// src/media/MediaElement.ts\nimport { discoverable, FullscreenController, IS_IOS, ScreenOrientationController, setAttribute as setAttribute2 } from \"@vidstack/foundation\";\nimport { css, html, LitElement } from \"lit\";\nimport { property, state } from \"lit/decorators.js\";\n\n// src/media/style/MediaAttrsController.ts\nimport { isNumber, isString, setAttribute } from \"@vidstack/foundation\";\n\n// src/media/style/MediaStyleController.ts\nimport { camelToKebabCase, DisposalBin as DisposalBin3, requestIdleCallback } from \"@vidstack/foundation\";\nvar MediaStyleController = class {\n  constructor(_host, _store, _mediaProps) {\n    this._host = _host;\n    this._store = _store;\n    this._mediaProps = _mediaProps;\n    this._disposal = new DisposalBin3();\n    this._host.addController({\n      hostConnected: this._hostConnected.bind(this),\n      hostDisconnected: this._hostDisconnected.bind(this)\n    });\n  }\n  _hostConnected() {\n    requestIdleCallback(() => {\n      for (const propName of this._mediaProps) {\n        const store = this._store[propName];\n        if (store) {\n          const attrName = this._getMediaAttrName(propName);\n          const unsub = store.subscribe($v => {\n            window?.requestAnimationFrame(() => {\n              this._handleValueChange(propName, attrName, $v);\n            });\n          });\n          this._disposal.add(unsub);\n        }\n      }\n    });\n  }\n  _hostDisconnected() {\n    for (const propName of this._mediaProps) {\n      this._handleDisconnect(propName, this._getMediaAttrName(propName));\n    }\n    this._disposal.empty();\n  }\n  _getMediaAttrName(propName) {\n    return camelToKebabCase(propName);\n  }\n};\n\n// src/media/style/MediaAttrsController.ts\nvar MediaAttrsController = class extends MediaStyleController {\n  _handleValueChange(_, attrName, value) {\n    window.requestAnimationFrame(() => {\n      setAttribute(this._host, attrName, isString(value) || isNumber(value) ? String(value) : !!value);\n    });\n  }\n  _handleDisconnect(_, attrName) {\n    this._host.removeAttribute(attrName);\n  }\n};\nfunction bindMediaPropsToAttrs(...params) {\n  return new MediaAttrsController(...params);\n}\n\n// src/media/style/MediaCssPropsController.ts\nimport { isNumber as isNumber2, isString as isString2 } from \"@vidstack/foundation\";\nvar MediaCssPropsController = class extends MediaStyleController {\n  _handleValueChange(_, attrName, value) {\n    window.requestAnimationFrame(() => {\n      this._host.style.setProperty(this._getCssPropName(attrName), isString2(value) || isNumber2(value) ? String(value) : null);\n    });\n  }\n  _getCssPropName(attrName) {\n    return `--vds-${attrName}`;\n  }\n  _handleDisconnect(_, attrName) {\n    this._host.style.setProperty(this._getCssPropName(attrName), null);\n  }\n};\nfunction bindMediaPropsToCssProps(...params) {\n  return new MediaCssPropsController(...params);\n}\n\n// src/media/MediaElement.ts\nvar mediaDiscoveryId = Symbol(\"@vidstack/media-discovery\");\nvar MediaElement = class extends LitElement {\n  constructor() {\n    super();\n    this.controller = new MediaController(this);\n    this.__mediaFullscreen = false;\n    this.__mediaIsVideoView = false;\n    this.__mediaPlaysinline = false;\n    this.screenOrientationController = new ScreenOrientationController(this);\n    this.fullscreenController = new FullscreenController(this, this.screenOrientationController);\n    discoverable(this, \"vds-media-connect\", {\n      register: mediaDiscoveryId\n    });\n    mediaStoreSubscription(this, \"fullscreen\", $fullscreen => {\n      this.__mediaFullscreen = $fullscreen;\n    });\n    mediaStoreSubscription(this, \"viewType\", $viewType => {\n      this.__mediaIsVideoView = $viewType === \"video\" /* Video */;\n    });\n    mediaStoreSubscription(this, \"playsinline\", $playsinline => {\n      this.__mediaPlaysinline = $playsinline;\n    });\n    this._bindMediaAttributes();\n    this._bindMediaCSSProperties();\n  }\n  static get styles() {\n    return [css`\n        :host {\n          display: inline-block;\n          position: relative;\n          contain: content;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      `];\n  }\n  get provider() {\n    return this.controller.provider;\n  }\n  update(changedProperties) {\n    setAttribute2(this, \"hide-ui\", this._shouldHideMediaUI());\n    super.update(changedProperties);\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n  get canFullscreen() {\n    return this.fullscreenController.isSupported;\n  }\n  get fullscreen() {\n    return this.fullscreenController.isFullscreen;\n  }\n  get fullscreenOrientation() {\n    return this.fullscreenController.screenOrientationLock;\n  }\n  set fullscreenOrientation(lockType) {\n    const prevLockType = this.fullscreenController.screenOrientationLock;\n    if (prevLockType !== lockType) {\n      this.fullscreenController.screenOrientationLock = lockType;\n      this.requestUpdate(\"fullscreen-orientation\", prevLockType);\n    }\n  }\n  enterFullscreen() {\n    return this.fullscreenController.enterFullscreen();\n  }\n  exitFullscreen() {\n    return this.fullscreenController.exitFullscreen();\n  }\n  _bindMediaAttributes() {\n    bindMediaPropsToAttrs(this, this.controller.store, [\"autoplay\", \"autoplayError\", \"canLoad\", \"canPlay\", \"canFullscreen\", \"ended\", \"error\", \"fullscreen\", \"userIdle\", \"loop\", \"mediaType\", \"muted\", \"paused\", \"playing\", \"playsinline\", \"seeking\", \"started\", \"viewType\", \"waiting\"]);\n  }\n  _bindMediaCSSProperties() {\n    bindMediaPropsToCssProps(this, this.controller.store, [\"bufferedAmount\", \"currentTime\", \"duration\", \"seekableAmount\"]);\n  }\n  _shouldHideMediaUI() {\n    return IS_IOS && this.__mediaIsVideoView && (!this.__mediaPlaysinline || this.__mediaFullscreen);\n  }\n};\n__decorateClass([state()], MediaElement.prototype, \"__mediaFullscreen\", 2);\n__decorateClass([state()], MediaElement.prototype, \"__mediaIsVideoView\", 2);\n__decorateClass([state()], MediaElement.prototype, \"__mediaPlaysinline\", 2);\n__decorateClass([property({\n  attribute: \"fullscreen-orientation\"\n})], MediaElement.prototype, \"fullscreenOrientation\", 1);\nexport { UserIdleController, MediaController, mediaDiscoveryId, MediaElement };","map":{"version":3,"names":["mediaProviderElementContext","mediaProviderDiscoveryId","mediaStoreContext","mediaStoreSubscription","resetMediaStore","softResetMediaStore","__decorateClass","DisposalBin","listen","vdsEvent","UserIdleController","constructor","_host","_mediaStore","_idle","_mediaPaused","_idlingPaused","_disposal","delay","addController","paused","_handleIdleChange","hostConnected","add","subscribe","$paused","startIdleTimerEvents","forEach","eventType","off","bind","hostDisconnected","empty","_stopIdleTimer","_startIdleTimer","_idleTimeout","window","setTimeout","_dispatchIdleChange","clearTimeout","isIdle","dispatchEvent","detail","appendTriggerEvent","copyStoreRecords","debounce","discover","DisposalBin2","eventListener","isNil","keysOf","listen2","LogController","LogDispatcher","RequestQueue","throttle","unwrapStoreRecord","vdsEvent2","MediaController","_disconnectDisposal","providerQueue","providerDisposal","_logController","_logger","_providerContext","provide","_mediaStoreProvider","state","_store","_userIdleController","event","userIdle","set","_satisfyMediaRequest","_pendingMediaRequests","loading","play","pause","volume","fullscreen","seeked","seeking","_handleStartLoadingRequest","_createMediaRequestHandler","canLoad","push","_provider","startLoadingMedia","_handleMuteRequest","muted","provider","_handleUnmuteRequest","_handlePlayRequest","_handlePauseRequest","_isSeekingRequestPending","_handleSeekingRequest","_stopWaiting","_handleSeekRequest","store","ended","_isReplay","time","duration","currentTime","_handleVolumeChangeRequest","_handleEnterFullscreenRequest","target","canFullscreen","enterFullscreen","_handleExitFullscreenRequest","exitFullscreen","_handleResumeIdlingRequest","_mediaRequestEventGateway","_handlePauseIdlingRequest","_handleShowPosterRequest","canLoadPoster","_handleHidePosterRequest","_handleLoopRequest","requestAnimationFrame","_isLooping","e","_handleFullscreenChange","triggerEvent","_handleFullscreenError","_firingWaiting","_mediaEvents","_handleSeeking","leading","_fireWaiting","_originalWaitingEvent","waiting","playing","_skipInitialSrcChange","onDisconnect","attachMediaProvider","canPlay","setAttribute","_clearMediaStateTracking","_clearPendingMediaRequests","destroy","logLevel","level","_handleMediaProviderDisconnect","value","_attachMediaEventListeners","attachMediaController","cb","_flushMediaProviderConnectedQueue","viewType","start","stop","idleDelay","key","type","requestEvent","shift","stopPropagation","infoGroup","labelledLog","dispatch","queueKey","callback","queue","mediaEventListeners","_handleCanLoad","_handleLoadStart","_handleLoadedData","_handleLoadedMetadata","_handleCanPlay","_handleCanPlayThrough","_handleCurrentSrcChange","_handleAutoplay","_handleAutoplayFail","_handlePlay","_handlePlayFail","_handlePlaying","_handlePause","_handleTimeUpdate","_handleVolumeChange","_handleSeeked","_handleWaiting","_handleEnded","_handleAutoplayChange","_handleError","_handleFullscreenSupportChange","_handlePosterChange","_handleLoopChange","_handlePlaysinlineChange","_handleControlsChange","_handleMediaTypeChange","_handleViewTypeChange","_handleDurationChange","_handleProgress","_handleSrcChange","handler","_findLastMediaEvent","map","lastIndexOf","_updateMetadata","metadata","currentSrc","mediaType","autoplayError","stopImmediatePropagation","replayEvent","playEvent","started","played","cancel","autoplay","error","poster","loop","playsinline","controls","isNaN","buffered","seekable","bufferedAmount","length","end","seekableAmount","src","discoverable","FullscreenController","IS_IOS","ScreenOrientationController","setAttribute2","css","html","LitElement","property","isNumber","isString","camelToKebabCase","DisposalBin3","requestIdleCallback","MediaStyleController","_mediaProps","_hostConnected","_hostDisconnected","propName","attrName","_getMediaAttrName","unsub","$v","_handleValueChange","_handleDisconnect","MediaAttrsController","_","String","removeAttribute","bindMediaPropsToAttrs","params","isNumber2","isString2","MediaCssPropsController","style","setProperty","_getCssPropName","bindMediaPropsToCssProps","mediaDiscoveryId","Symbol","MediaElement","controller","__mediaFullscreen","__mediaIsVideoView","__mediaPlaysinline","screenOrientationController","fullscreenController","register","$fullscreen","$viewType","$playsinline","_bindMediaAttributes","_bindMediaCSSProperties","styles","update","changedProperties","_shouldHideMediaUI","render","isSupported","isFullscreen","fullscreenOrientation","screenOrientationLock","lockType","prevLockType","requestUpdate","prototype","attribute"],"sources":["/Users/andrewkallmeyer/kall.com/node_modules/@vidstack/player/dist/dev/chunks/chunk.KT56YXMN.js"],"sourcesContent":["import {\n  mediaProviderElementContext\n} from \"./chunk.APMKZUJJ.js\";\nimport {\n  mediaProviderDiscoveryId\n} from \"./chunk.BJN6YOPG.js\";\nimport {\n  mediaStoreContext,\n  mediaStoreSubscription,\n  resetMediaStore,\n  softResetMediaStore\n} from \"./chunk.O2H47C42.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LNH2V2XS.js\";\n\n// src/media/controller/UserIdleController.ts\nimport { DisposalBin, listen, vdsEvent } from \"@vidstack/foundation\";\nvar UserIdleController = class {\n  constructor(_host, _mediaStore) {\n    this._host = _host;\n    this._mediaStore = _mediaStore;\n    this._idle = false;\n    this._mediaPaused = false;\n    this._idlingPaused = false;\n    this._disposal = new DisposalBin();\n    this.delay = 2e3;\n    _host.addController(this);\n  }\n  get paused() {\n    return this._idlingPaused || this._mediaPaused;\n  }\n  set paused(paused) {\n    this._idlingPaused = paused;\n    this._handleIdleChange();\n  }\n  hostConnected() {\n    this._disposal.add(\n      this._mediaStore.paused.subscribe(($paused) => {\n        this._mediaPaused = $paused;\n        this._handleIdleChange();\n      })\n    );\n    const startIdleTimerEvents = [\"pointerdown\", \"pointermove\", \"focus\", \"keydown\"];\n    startIdleTimerEvents.forEach((eventType) => {\n      const off = listen(this._host, eventType, this._handleIdleChange.bind(this));\n      this._disposal.add(off);\n    });\n  }\n  hostDisconnected() {\n    this._disposal.empty();\n    this._stopIdleTimer();\n  }\n  _handleIdleChange() {\n    if (this.paused) {\n      this._stopIdleTimer();\n    } else {\n      this._startIdleTimer();\n    }\n  }\n  _startIdleTimer() {\n    this._stopIdleTimer();\n    this._idleTimeout = window.setTimeout(() => {\n      this._dispatchIdleChange(!this.paused);\n    }, this.delay);\n  }\n  _stopIdleTimer() {\n    window.clearTimeout(this._idleTimeout);\n    this._dispatchIdleChange(false);\n  }\n  _dispatchIdleChange(isIdle) {\n    if (this._idle !== isIdle) {\n      this._host.dispatchEvent(vdsEvent(\"vds-user-idle-change\", { detail: isIdle }));\n      this._idle = isIdle;\n    }\n  }\n};\n\n// src/media/controller/MediaController.ts\nimport {\n  appendTriggerEvent,\n  copyStoreRecords,\n  debounce,\n  discover,\n  DisposalBin as DisposalBin2,\n  eventListener,\n  isNil,\n  keysOf,\n  listen as listen2,\n  LogController,\n  LogDispatcher,\n  RequestQueue,\n  throttle,\n  unwrapStoreRecord,\n  vdsEvent as vdsEvent2\n} from \"@vidstack/foundation\";\nvar MediaController = class {\n  constructor(_host) {\n    this._host = _host;\n    this._disconnectDisposal = new DisposalBin2();\n    this.providerQueue = new RequestQueue();\n    this.providerDisposal = new DisposalBin2();\n    this._logController = true ? new LogController(this._host) : void 0;\n    this._logger = true ? new LogDispatcher(this._host) : void 0;\n    this._providerContext = mediaProviderElementContext.provide(this._host);\n    this._mediaStoreProvider = mediaStoreContext.provide(this._host);\n    this.state = unwrapStoreRecord(this._store);\n    this._userIdleController = new UserIdleController(this._host, this._store);\n    this._handleIdleChange = eventListener(this._host, \"vds-user-idle-change\", (event) => {\n      this._store.userIdle.set(event.detail);\n      this._satisfyMediaRequest(\"userIdle\", event);\n    });\n    this._pendingMediaRequests = {\n      loading: [],\n      play: [],\n      pause: [],\n      volume: [],\n      fullscreen: [],\n      seeked: [],\n      seeking: [],\n      userIdle: []\n    };\n    this._handleStartLoadingRequest = eventListener(\n      this._host,\n      \"vds-start-loading\",\n      this._createMediaRequestHandler(\"loading\", (event) => {\n        if (this.state.canLoad)\n          return;\n        this._pendingMediaRequests.loading.push(event);\n        this._provider.startLoadingMedia();\n      })\n    );\n    this._handleMuteRequest = eventListener(\n      this._host,\n      \"vds-mute-request\",\n      this._createMediaRequestHandler(\"muted\", (event) => {\n        if (this.state.muted)\n          return;\n        this._pendingMediaRequests.volume.push(event);\n        this.provider.muted = true;\n      })\n    );\n    this._handleUnmuteRequest = eventListener(\n      this._host,\n      \"vds-unmute-request\",\n      this._createMediaRequestHandler(\"muted\", (event) => {\n        if (!this.state.muted)\n          return;\n        this._pendingMediaRequests.volume.push(event);\n        this.provider.muted = false;\n        if (this.state.volume === 0) {\n          this._pendingMediaRequests.volume.push(event);\n          this.provider.volume = 0.25;\n        }\n      })\n    );\n    this._handlePlayRequest = eventListener(\n      this._host,\n      \"vds-play-request\",\n      this._createMediaRequestHandler(\"paused\", (event) => {\n        if (!this.state.paused)\n          return;\n        this._pendingMediaRequests.play.push(event);\n        this.provider.paused = false;\n      })\n    );\n    this._handlePauseRequest = eventListener(\n      this._host,\n      \"vds-pause-request\",\n      this._createMediaRequestHandler(\"paused\", (event) => {\n        if (this.state.paused)\n          return;\n        this._pendingMediaRequests.pause.push(event);\n        this.provider.paused = true;\n      })\n    );\n    this._isSeekingRequestPending = false;\n    this._handleSeekingRequest = eventListener(\n      this._host,\n      \"vds-seeking-request\",\n      this._createMediaRequestHandler(\"seeking\", (event) => {\n        this._stopWaiting();\n        this._pendingMediaRequests.seeking.push(event);\n        this._isSeekingRequestPending = true;\n        this._store.seeking.set(true);\n      })\n    );\n    this._handleSeekRequest = eventListener(\n      this._host,\n      \"vds-seek-request\",\n      this._createMediaRequestHandler(\"seeking\", (event) => {\n        if (this.store.ended) {\n          this._isReplay = true;\n        }\n        this._pendingMediaRequests.seeked.push(event);\n        this._isSeekingRequestPending = false;\n        let time = event.detail;\n        if (this.state.duration - event.detail < 0.25) {\n          time = this.state.duration;\n        }\n        this.provider.currentTime = time;\n      })\n    );\n    this._handleVolumeChangeRequest = eventListener(\n      this._host,\n      \"vds-volume-change-request\",\n      this._createMediaRequestHandler(\"volume\", (event) => {\n        const volume = event.detail;\n        if (this.state.volume === volume)\n          return;\n        this._pendingMediaRequests.volume.push(event);\n        this.provider.volume = volume;\n        if (volume > 0 && this.state.muted) {\n          this._pendingMediaRequests.volume.push(event);\n          this.provider.muted = false;\n        }\n      })\n    );\n    this._handleEnterFullscreenRequest = eventListener(\n      this._host,\n      \"vds-enter-fullscreen-request\",\n      this._createMediaRequestHandler(\"fullscreen\", async (event) => {\n        if (this.state.fullscreen)\n          return;\n        const target = event.detail ?? \"media\";\n        if (target === \"media\" && this._host.canFullscreen) {\n          this._pendingMediaRequests.fullscreen.push(event);\n          await this._host.enterFullscreen?.();\n        } else if (this.provider) {\n          this._pendingMediaRequests.fullscreen.push(event);\n          await this.provider.enterFullscreen();\n        }\n      })\n    );\n    this._handleExitFullscreenRequest = eventListener(\n      this._host,\n      \"vds-exit-fullscreen-request\",\n      this._createMediaRequestHandler(\"fullscreen\", async (event) => {\n        if (!this.state.fullscreen)\n          return;\n        const target = event.detail ?? \"media\";\n        if (target === \"media\" && this._host.canFullscreen) {\n          this._pendingMediaRequests.fullscreen.push(event);\n          await this._host.exitFullscreen?.();\n        } else if (this.provider) {\n          this._pendingMediaRequests.fullscreen.push(event);\n          await this.provider.exitFullscreen();\n        }\n      })\n    );\n    this._handleResumeIdlingRequest = eventListener(\n      this._host,\n      \"vds-resume-user-idle-request\",\n      (event) => {\n        if (!this._mediaRequestEventGateway(event))\n          return;\n        this._pendingMediaRequests.userIdle.push(event);\n        this._userIdleController.paused = false;\n      }\n    );\n    this._handlePauseIdlingRequest = eventListener(\n      this._host,\n      \"vds-pause-user-idle-request\",\n      (event) => {\n        if (!this._mediaRequestEventGateway(event))\n          return;\n        this._pendingMediaRequests.userIdle.push(event);\n        this._userIdleController.paused = true;\n      }\n    );\n    this._handleShowPosterRequest = eventListener(\n      this._host,\n      \"vds-show-poster-request\",\n      this._createMediaRequestHandler(\"poster\", () => {\n        this._provider.canLoadPoster = true;\n      })\n    );\n    this._handleHidePosterRequest = eventListener(\n      this._host,\n      \"vds-hide-poster-request\",\n      this._createMediaRequestHandler(\"poster\", () => {\n        this._provider.canLoadPoster = false;\n      })\n    );\n    this._handleLoopRequest = this._createMediaRequestHandler(\"loop\", () => {\n      window.requestAnimationFrame(async () => {\n        try {\n          this._isLooping = true;\n          this._isReplay = true;\n          await this._provider.play();\n        } catch (e) {\n          this._isReplay = false;\n          this._isLooping = false;\n        }\n      });\n    });\n    this._handleFullscreenChange = eventListener(\n      this._host,\n      \"vds-fullscreen-change\",\n      (event) => {\n        this._store.fullscreen.set(event.detail);\n        if (event.target !== this._host)\n          return;\n        this._satisfyMediaRequest(\"fullscreen\", event);\n        this._provider?.dispatchEvent(\n          vdsEvent2(\"vds-fullscreen-change\", {\n            detail: event.detail,\n            triggerEvent: event\n          })\n        );\n      }\n    );\n    this._handleFullscreenError = eventListener(\n      this._host,\n      \"vds-fullscreen-error\",\n      (event) => {\n        if (event.target !== this._host)\n          return;\n        this._satisfyMediaRequest(\"fullscreen\", event);\n        this._provider?.dispatchEvent(\n          vdsEvent2(\"vds-fullscreen-error\", {\n            detail: event.detail,\n            triggerEvent: event\n          })\n        );\n      }\n    );\n    this._isReplay = false;\n    this._isLooping = false;\n    this._firingWaiting = false;\n    this._mediaEvents = [];\n    this._handleSeeking = throttle(\n      (event) => {\n        this._mediaEvents.push(event);\n        this._store.seeking.set(true);\n        this._store.currentTime.set(event.detail);\n        this._satisfyMediaRequest(\"seeking\", event);\n      },\n      150,\n      { leading: true }\n    );\n    this._fireWaiting = debounce(() => {\n      if (!this._originalWaitingEvent)\n        return;\n      this._firingWaiting = true;\n      const event = vdsEvent2(\"vds-waiting\", this._originalWaitingEvent);\n      this._mediaEvents.push(event);\n      this._store.waiting.set(true);\n      this._store.playing.set(false);\n      this._provider?.dispatchEvent(event);\n      this._originalWaitingEvent = void 0;\n      this._firingWaiting = false;\n    }, 300);\n    this._skipInitialSrcChange = true;\n    discover(_host, mediaProviderDiscoveryId, (provider, onDisconnect) => {\n      this.attachMediaProvider(provider, onDisconnect);\n    });\n    _host.addController({\n      hostConnected: () => {\n        if (!this.state.canPlay) {\n          this._host.setAttribute(\"aria-busy\", \"true\");\n        }\n      },\n      hostDisconnected: () => {\n        this._clearMediaStateTracking();\n        this._clearPendingMediaRequests();\n        this.providerQueue.destroy();\n        this.providerDisposal.empty();\n        this._skipInitialSrcChange = true;\n        this._disconnectDisposal.empty();\n      }\n    });\n  }\n  get logLevel() {\n    return this._logController?.logLevel ?? \"silent\";\n  }\n  set logLevel(level) {\n    if (true) {\n      this._logController.logLevel = level;\n    }\n  }\n  get provider() {\n    return this._provider;\n  }\n  attachMediaProvider(provider, onDisconnect) {\n    if (!isNil(this.provider) || this.provider === provider)\n      return;\n    this._handleMediaProviderDisconnect();\n    this._provider = provider;\n    this._providerContext.value.set(provider);\n    copyStoreRecords(this._provider._store, this._store);\n    this._attachMediaEventListeners();\n    provider.attachMediaController(this, (cb) => this._disconnectDisposal.add(cb));\n    this._flushMediaProviderConnectedQueue();\n    onDisconnect(this._handleMediaProviderDisconnect.bind(this));\n  }\n  _handleMediaProviderDisconnect() {\n    if (isNil(this.provider))\n      return;\n    this._stopWaiting();\n    this.providerQueue.destroy();\n    this.providerDisposal.empty();\n    this._provider = void 0;\n    this._providerContext.value.set(void 0);\n    resetMediaStore(this._store);\n    this._store.viewType.set(\"unknown\" /* Unknown */);\n  }\n  _flushMediaProviderConnectedQueue() {\n    this.providerQueue.start();\n    this.providerDisposal.add(() => {\n      this.providerQueue.stop();\n    });\n  }\n  get store() {\n    return this._mediaStoreProvider.value;\n  }\n  get _store() {\n    return this._mediaStoreProvider.value;\n  }\n  get idleDelay() {\n    return this._userIdleController.delay;\n  }\n  set idleDelay(delay) {\n    this._userIdleController.delay = delay;\n  }\n  _clearPendingMediaRequests() {\n    keysOf(this._pendingMediaRequests).forEach((key) => {\n      this._pendingMediaRequests[key] = [];\n    });\n  }\n  _satisfyMediaRequest(type, event) {\n    const requestEvent = this._pendingMediaRequests[type].shift();\n    if (requestEvent) {\n      event.requestEvent = requestEvent;\n      appendTriggerEvent(event, requestEvent);\n    }\n  }\n  _mediaRequestEventGateway(event) {\n    event.stopPropagation();\n    if (true) {\n      this._logger?.infoGroup(`\\u{1F4EC} received \\`${event.type}\\``).labelledLog(\"Request\", event).dispatch();\n    }\n    return true;\n  }\n  _createMediaRequestHandler(queueKey, callback) {\n    return (event) => {\n      if (!this._mediaRequestEventGateway(event))\n        return;\n      if (this._provider) {\n        callback(event);\n        return;\n      }\n      this.providerQueue.queue(queueKey, () => {\n        callback(event);\n      });\n    };\n  }\n  _attachMediaEventListeners() {\n    if (!this._provider)\n      return;\n    const mediaEventListeners = {\n      \"vds-can-load\": this._handleCanLoad,\n      \"vds-load-start\": this._handleLoadStart,\n      \"vds-loaded-data\": this._handleLoadedData,\n      \"vds-loaded-metadata\": this._handleLoadedMetadata,\n      \"vds-can-play\": this._handleCanPlay,\n      \"vds-can-play-through\": this._handleCanPlayThrough,\n      \"vds-current-src-change\": this._handleCurrentSrcChange,\n      \"vds-autoplay\": this._handleAutoplay,\n      \"vds-autoplay-fail\": this._handleAutoplayFail,\n      \"vds-loop-request\": this._handleLoopRequest,\n      \"vds-play\": this._handlePlay,\n      \"vds-play-fail\": this._handlePlayFail,\n      \"vds-playing\": this._handlePlaying,\n      \"vds-pause\": this._handlePause,\n      \"vds-time-update\": this._handleTimeUpdate,\n      \"vds-volume-change\": this._handleVolumeChange,\n      \"vds-seeking\": this._handleSeeking,\n      \"vds-seeked\": this._handleSeeked,\n      \"vds-waiting\": this._handleWaiting,\n      \"vds-ended\": this._handleEnded,\n      \"vds-autoplay-change\": this._handleAutoplayChange,\n      \"vds-error\": this._handleError,\n      \"vds-fullscreen-support-change\": this._handleFullscreenSupportChange,\n      \"vds-poster-change\": this._handlePosterChange,\n      \"vds-loop-change\": this._handleLoopChange,\n      \"vds-playsinline-change\": this._handlePlaysinlineChange,\n      \"vds-controls-change\": this._handleControlsChange,\n      \"vds-media-type-change\": this._handleMediaTypeChange,\n      \"vds-view-type-change\": this._handleViewTypeChange,\n      \"vds-duration-change\": this._handleDurationChange,\n      \"vds-progress\": this._handleProgress,\n      \"vds-src-change\": this._handleSrcChange\n    };\n    for (const eventType of keysOf(mediaEventListeners)) {\n      const handler = mediaEventListeners[eventType].bind(this);\n      this.providerDisposal.add(listen2(this._provider, eventType, handler));\n    }\n  }\n  _clearMediaStateTracking() {\n    this._isReplay = false;\n    this._isLooping = false;\n    this._firingWaiting = false;\n    this._originalWaitingEvent = void 0;\n    this._mediaEvents = [];\n  }\n  _findLastMediaEvent(eventType) {\n    return this._mediaEvents[this._mediaEvents.map((e) => e.type).lastIndexOf(eventType)];\n  }\n  _handleCanLoad(event) {\n    this._store.canLoad.set(true);\n    this._mediaEvents.push(event);\n    this._satisfyMediaRequest(\"loading\", event);\n  }\n  _updateMetadata(metadata) {\n    this._store.currentSrc.set(metadata.currentSrc);\n    this._store.mediaType.set(metadata.mediaType);\n    this._store.viewType.set(metadata.viewType);\n  }\n  _handleLoadStart(event) {\n    this._updateMetadata(event.detail);\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-src-change\"));\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-can-load\"));\n  }\n  _handleLoadedData(event) {\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-load-start\"));\n  }\n  _handleLoadedMetadata(event) {\n    this._updateMetadata(event.detail);\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-load-start\"));\n  }\n  _handleCanPlay(event) {\n    this._mediaEvents.push(event);\n    if (event.triggerEvent?.type !== \"loadedmetadata\") {\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-loaded-metadata\"));\n    }\n    this._store.canPlay.set(true);\n    this._store.duration.set(event.detail.duration);\n    this._host.setAttribute(\"aria-busy\", \"false\");\n  }\n  _handleCanPlayThrough(event) {\n    this._store.canPlay.set(true);\n    this._store.duration.set(event.detail.duration);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-can-play\"));\n  }\n  _handleAutoplay(event) {\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-play\"));\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-can-play\"));\n    this._store.autoplayError.set(void 0);\n  }\n  _handleAutoplayFail(event) {\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-play-fail\"));\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-can-play\"));\n    this._store.autoplayError.set(event.detail);\n    this._clearMediaStateTracking();\n  }\n  _handlePlay(event) {\n    if (this._isLooping || !this.state.paused) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    this._mediaEvents.push(event);\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-waiting\"));\n    this._satisfyMediaRequest(\"play\", event);\n    this._store.paused.set(false);\n    this._store.autoplayError.set(void 0);\n    if (this.state.ended || this._isReplay) {\n      this._isReplay = false;\n      this._store.ended.set(false);\n      const replayEvent = vdsEvent2(\"vds-replay\", {\n        triggerEvent: event\n      });\n      this._provider?.dispatchEvent(replayEvent);\n    }\n  }\n  _handlePlayFail(event) {\n    this._mediaEvents.push(event);\n    this._stopWaiting();\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-play\"));\n    this._store.paused.set(true);\n    this._store.playing.set(false);\n    this._satisfyMediaRequest(\"play\", event);\n    this._clearMediaStateTracking();\n  }\n  _handlePlaying(event) {\n    this._mediaEvents.push(event);\n    const playEvent = this._findLastMediaEvent(\"vds-play\");\n    if (playEvent) {\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-waiting\"));\n      appendTriggerEvent(event, playEvent);\n    } else {\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-seeked\"));\n    }\n    this._stopWaiting();\n    this._clearMediaStateTracking();\n    this._store.paused.set(false);\n    this._store.playing.set(true);\n    this._store.seeking.set(false);\n    this._store.ended.set(false);\n    if (this._isLooping) {\n      event.stopImmediatePropagation();\n      this._isLooping = false;\n      return;\n    }\n    if (!this.state.started) {\n      this._store.started.set(true);\n      this._provider?.dispatchEvent(vdsEvent2(\"vds-started\", { triggerEvent: event }));\n    }\n  }\n  _handlePause(event) {\n    if (this._isLooping) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    appendTriggerEvent(event, this._findLastMediaEvent(\"vds-seeked\"));\n    this._satisfyMediaRequest(\"pause\", event);\n    this._store.paused.set(true);\n    this._store.playing.set(false);\n    this._store.seeking.set(false);\n    this._stopWaiting();\n    this._clearMediaStateTracking();\n  }\n  _handleTimeUpdate(event) {\n    const { currentTime, played } = event.detail;\n    this._store.currentTime.set(currentTime);\n    this._store.played.set(played);\n    this._store.waiting.set(false);\n  }\n  _handleVolumeChange(event) {\n    this._store.volume.set(event.detail.volume);\n    this._store.muted.set(event.detail.muted || event.detail.volume === 0);\n    this._satisfyMediaRequest(\"volume\", event);\n  }\n  _handleSeeked(event) {\n    if (this._isSeekingRequestPending) {\n      this._store.seeking.set(true);\n      event.stopImmediatePropagation();\n    } else if (this.state.seeking) {\n      this._mediaEvents.push(event);\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-waiting\"));\n      appendTriggerEvent(event, this._findLastMediaEvent(\"vds-seeking\"));\n      if (this.state.paused) {\n        this._stopWaiting();\n      }\n      this._store.seeking.set(false);\n      if (event.detail !== this.state.duration) {\n        this._store.ended.set(false);\n      }\n      this._store.currentTime.set(event.detail);\n      this._satisfyMediaRequest(\"seeked\", event);\n    }\n  }\n  _stopWaiting() {\n    this._fireWaiting.cancel();\n    this._store.waiting.set(false);\n  }\n  _handleWaiting(event) {\n    if (this._firingWaiting)\n      return;\n    event.stopImmediatePropagation();\n    this._originalWaitingEvent = event;\n    this._fireWaiting();\n  }\n  _handleEnded(event) {\n    if (this._isLooping) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    this._stopWaiting();\n    this._store.paused.set(true);\n    this._store.playing.set(false);\n    this._store.seeking.set(false);\n    this._store.ended.set(true);\n    this._clearMediaStateTracking();\n  }\n  _handleAutoplayChange(event) {\n    this._store.autoplay.set(event.detail);\n  }\n  _handleCurrentSrcChange(event) {\n    this._store.currentSrc.set(event.detail);\n    if (this._skipInitialSrcChange) {\n      this._skipInitialSrcChange = false;\n      return;\n    }\n    this._clearMediaStateTracking();\n    softResetMediaStore(this._store);\n    this._host.setAttribute(\"aria-busy\", \"true\");\n  }\n  _handleError(event) {\n    this._store.error.set(event.detail);\n  }\n  _handleFullscreenSupportChange(event) {\n    this._store.canFullscreen.set(event.detail);\n  }\n  _handlePosterChange(event) {\n    this._store.poster.set(event.detail);\n  }\n  _handleLoopChange(event) {\n    this._store.loop.set(event.detail);\n  }\n  _handlePlaysinlineChange(event) {\n    this._store.playsinline.set(event.detail);\n  }\n  _handleControlsChange(event) {\n    this._store.controls.set(event.detail);\n  }\n  _handleMediaTypeChange(event) {\n    this._store.mediaType.set(event.detail);\n  }\n  _handleDurationChange(event) {\n    const duration = event.detail;\n    this._store.duration.set(!isNaN(duration) ? duration : 0);\n  }\n  _handleProgress(event) {\n    const { buffered, seekable } = event.detail;\n    const bufferedAmount = buffered.length === 0 ? 0 : buffered.end(buffered.length - 1);\n    const seekableAmount = seekable.length === 0 ? 0 : seekable.end(seekable.length - 1);\n    this._store.buffered.set(buffered);\n    this._store.bufferedAmount.set(bufferedAmount);\n    this._store.seekable.set(seekable);\n    this._store.seekableAmount.set(seekableAmount);\n  }\n  _handleSrcChange(event) {\n    this._store.src.set(event.detail);\n  }\n  _handleViewTypeChange(event) {\n    this._store.viewType.set(event.detail);\n  }\n};\n\n// src/media/MediaElement.ts\nimport {\n  discoverable,\n  FullscreenController,\n  IS_IOS,\n  ScreenOrientationController,\n  setAttribute as setAttribute2\n} from \"@vidstack/foundation\";\nimport {\n  css,\n  html,\n  LitElement\n} from \"lit\";\nimport { property, state } from \"lit/decorators.js\";\n\n// src/media/style/MediaAttrsController.ts\nimport { isNumber, isString, setAttribute } from \"@vidstack/foundation\";\n\n// src/media/style/MediaStyleController.ts\nimport { camelToKebabCase, DisposalBin as DisposalBin3, requestIdleCallback } from \"@vidstack/foundation\";\nvar MediaStyleController = class {\n  constructor(_host, _store, _mediaProps) {\n    this._host = _host;\n    this._store = _store;\n    this._mediaProps = _mediaProps;\n    this._disposal = new DisposalBin3();\n    this._host.addController({\n      hostConnected: this._hostConnected.bind(this),\n      hostDisconnected: this._hostDisconnected.bind(this)\n    });\n  }\n  _hostConnected() {\n    requestIdleCallback(() => {\n      for (const propName of this._mediaProps) {\n        const store = this._store[propName];\n        if (store) {\n          const attrName = this._getMediaAttrName(propName);\n          const unsub = store.subscribe(($v) => {\n            window?.requestAnimationFrame(() => {\n              this._handleValueChange(propName, attrName, $v);\n            });\n          });\n          this._disposal.add(unsub);\n        }\n      }\n    });\n  }\n  _hostDisconnected() {\n    for (const propName of this._mediaProps) {\n      this._handleDisconnect(propName, this._getMediaAttrName(propName));\n    }\n    this._disposal.empty();\n  }\n  _getMediaAttrName(propName) {\n    return camelToKebabCase(propName);\n  }\n};\n\n// src/media/style/MediaAttrsController.ts\nvar MediaAttrsController = class extends MediaStyleController {\n  _handleValueChange(_, attrName, value) {\n    window.requestAnimationFrame(() => {\n      setAttribute(\n        this._host,\n        attrName,\n        isString(value) || isNumber(value) ? String(value) : !!value\n      );\n    });\n  }\n  _handleDisconnect(_, attrName) {\n    this._host.removeAttribute(attrName);\n  }\n};\nfunction bindMediaPropsToAttrs(...params) {\n  return new MediaAttrsController(...params);\n}\n\n// src/media/style/MediaCssPropsController.ts\nimport { isNumber as isNumber2, isString as isString2 } from \"@vidstack/foundation\";\nvar MediaCssPropsController = class extends MediaStyleController {\n  _handleValueChange(_, attrName, value) {\n    window.requestAnimationFrame(() => {\n      this._host.style.setProperty(\n        this._getCssPropName(attrName),\n        isString2(value) || isNumber2(value) ? String(value) : null\n      );\n    });\n  }\n  _getCssPropName(attrName) {\n    return `--vds-${attrName}`;\n  }\n  _handleDisconnect(_, attrName) {\n    this._host.style.setProperty(this._getCssPropName(attrName), null);\n  }\n};\nfunction bindMediaPropsToCssProps(...params) {\n  return new MediaCssPropsController(...params);\n}\n\n// src/media/MediaElement.ts\nvar mediaDiscoveryId = Symbol(\"@vidstack/media-discovery\");\nvar MediaElement = class extends LitElement {\n  constructor() {\n    super();\n    this.controller = new MediaController(this);\n    this.__mediaFullscreen = false;\n    this.__mediaIsVideoView = false;\n    this.__mediaPlaysinline = false;\n    this.screenOrientationController = new ScreenOrientationController(this);\n    this.fullscreenController = new FullscreenController(this, this.screenOrientationController);\n    discoverable(this, \"vds-media-connect\", { register: mediaDiscoveryId });\n    mediaStoreSubscription(this, \"fullscreen\", ($fullscreen) => {\n      this.__mediaFullscreen = $fullscreen;\n    });\n    mediaStoreSubscription(this, \"viewType\", ($viewType) => {\n      this.__mediaIsVideoView = $viewType === \"video\" /* Video */;\n    });\n    mediaStoreSubscription(this, \"playsinline\", ($playsinline) => {\n      this.__mediaPlaysinline = $playsinline;\n    });\n    this._bindMediaAttributes();\n    this._bindMediaCSSProperties();\n  }\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: inline-block;\n          position: relative;\n          contain: content;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      `\n    ];\n  }\n  get provider() {\n    return this.controller.provider;\n  }\n  update(changedProperties) {\n    setAttribute2(this, \"hide-ui\", this._shouldHideMediaUI());\n    super.update(changedProperties);\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n  get canFullscreen() {\n    return this.fullscreenController.isSupported;\n  }\n  get fullscreen() {\n    return this.fullscreenController.isFullscreen;\n  }\n  get fullscreenOrientation() {\n    return this.fullscreenController.screenOrientationLock;\n  }\n  set fullscreenOrientation(lockType) {\n    const prevLockType = this.fullscreenController.screenOrientationLock;\n    if (prevLockType !== lockType) {\n      this.fullscreenController.screenOrientationLock = lockType;\n      this.requestUpdate(\"fullscreen-orientation\", prevLockType);\n    }\n  }\n  enterFullscreen() {\n    return this.fullscreenController.enterFullscreen();\n  }\n  exitFullscreen() {\n    return this.fullscreenController.exitFullscreen();\n  }\n  _bindMediaAttributes() {\n    bindMediaPropsToAttrs(this, this.controller.store, [\n      \"autoplay\",\n      \"autoplayError\",\n      \"canLoad\",\n      \"canPlay\",\n      \"canFullscreen\",\n      \"ended\",\n      \"error\",\n      \"fullscreen\",\n      \"userIdle\",\n      \"loop\",\n      \"mediaType\",\n      \"muted\",\n      \"paused\",\n      \"playing\",\n      \"playsinline\",\n      \"seeking\",\n      \"started\",\n      \"viewType\",\n      \"waiting\"\n    ]);\n  }\n  _bindMediaCSSProperties() {\n    bindMediaPropsToCssProps(this, this.controller.store, [\n      \"bufferedAmount\",\n      \"currentTime\",\n      \"duration\",\n      \"seekableAmount\"\n    ]);\n  }\n  _shouldHideMediaUI() {\n    return IS_IOS && this.__mediaIsVideoView && (!this.__mediaPlaysinline || this.__mediaFullscreen);\n  }\n};\n__decorateClass([\n  state()\n], MediaElement.prototype, \"__mediaFullscreen\", 2);\n__decorateClass([\n  state()\n], MediaElement.prototype, \"__mediaIsVideoView\", 2);\n__decorateClass([\n  state()\n], MediaElement.prototype, \"__mediaPlaysinline\", 2);\n__decorateClass([\n  property({ attribute: \"fullscreen-orientation\" })\n], MediaElement.prototype, \"fullscreenOrientation\", 1);\n\nexport {\n  UserIdleController,\n  MediaController,\n  mediaDiscoveryId,\n  MediaElement\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}