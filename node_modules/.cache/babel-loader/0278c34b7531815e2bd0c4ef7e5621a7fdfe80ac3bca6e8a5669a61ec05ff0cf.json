{"ast":null,"code":"// src/media/interact/MediaRemoteControl.ts\nimport { hostRequestQueue, LogDispatcher, RequestQueue, vdsEvent } from \"@vidstack/foundation\";\nvar MediaRemoteControl = class {\n  constructor(_host) {\n    if (_host) {\n      this._target = _host;\n      this._createLogger(_host);\n      this._requests = hostRequestQueue(_host);\n    } else {\n      this._requests = new RequestQueue();\n    }\n  }\n  startLoading(triggerEvent) {\n    this._dispatchRequest(\"vds-start-loading\", {\n      triggerEvent\n    });\n  }\n  play(triggerEvent) {\n    this._dispatchRequest(\"vds-play-request\", {\n      triggerEvent\n    });\n  }\n  pause(triggerEvent) {\n    this._dispatchRequest(\"vds-pause-request\", {\n      triggerEvent\n    });\n  }\n  mute(triggerEvent) {\n    this._dispatchRequest(\"vds-mute-request\", {\n      triggerEvent\n    });\n  }\n  unmute(triggerEvent) {\n    this._dispatchRequest(\"vds-unmute-request\", {\n      triggerEvent\n    });\n  }\n  enterFullscreen(target, triggerEvent) {\n    this._dispatchRequest(\"vds-enter-fullscreen-request\", {\n      triggerEvent,\n      detail: target\n    });\n  }\n  exitFullscreen(target, triggerEvent) {\n    this._dispatchRequest(\"vds-exit-fullscreen-request\", {\n      triggerEvent,\n      detail: target\n    });\n  }\n  seeking(time, triggerEvent) {\n    this._dispatchRequest(\"vds-seeking-request\", {\n      detail: time,\n      triggerEvent\n    });\n  }\n  seek(time, triggerEvent) {\n    this._dispatchRequest(\"vds-seek-request\", {\n      detail: time,\n      triggerEvent\n    });\n  }\n  changeVolume(volume, triggerEvent) {\n    this._dispatchRequest(\"vds-volume-change-request\", {\n      detail: volume,\n      triggerEvent\n    });\n  }\n  resumeUserIdle(triggerEvent) {\n    this._dispatchRequest(\"vds-resume-user-idle-request\", {\n      triggerEvent\n    });\n  }\n  pauseUserIdle(triggerEvent) {\n    this._dispatchRequest(\"vds-pause-user-idle-request\", {\n      triggerEvent\n    });\n  }\n  showPoster(triggerEvent) {\n    this._dispatchRequest(\"vds-show-poster-request\", {\n      triggerEvent\n    });\n  }\n  hidePoster(triggerEvent) {\n    this._dispatchRequest(\"vds-hide-poster-request\", {\n      triggerEvent\n    });\n  }\n  setTarget(target) {\n    if (this._target === target) return;\n    this._target = target;\n    if (target) {\n      this._createLogger(target);\n      this._requests.start();\n    } else {\n      this._requests.stop();\n    }\n  }\n  _dispatchRequest(type, eventInit) {\n    this._requests.queue(type, () => {\n      const request = vdsEvent(type, {\n        ...eventInit,\n        bubbles: true,\n        composed: true\n      });\n      if (true) {\n        this._logger?.infoGroup(`\\u{1F4E8} dispatching \\`${type}\\``).labelledLog(\"Request Event\", request).labelledLog(\"Trigger Event\", eventInit.triggerEvent).dispatch();\n      }\n      this._target?.dispatchEvent(request);\n    });\n  }\n  _createLogger(target) {\n    if (true) {\n      this._logger = new LogDispatcher(target);\n    }\n  }\n};\nexport { MediaRemoteControl };","map":{"version":3,"names":["hostRequestQueue","LogDispatcher","RequestQueue","vdsEvent","MediaRemoteControl","constructor","_host","_target","_createLogger","_requests","startLoading","triggerEvent","_dispatchRequest","play","pause","mute","unmute","enterFullscreen","target","detail","exitFullscreen","seeking","time","seek","changeVolume","volume","resumeUserIdle","pauseUserIdle","showPoster","hidePoster","setTarget","start","stop","type","eventInit","queue","request","bubbles","composed","_logger","infoGroup","labelledLog","dispatch","dispatchEvent"],"sources":["/Users/andrewkallmeyer/kall.com/node_modules/@vidstack/player/dist/dev/chunks/chunk.X5QPRJP2.js"],"sourcesContent":["// src/media/interact/MediaRemoteControl.ts\nimport {\n  hostRequestQueue,\n  LogDispatcher,\n  RequestQueue,\n  vdsEvent\n} from \"@vidstack/foundation\";\nvar MediaRemoteControl = class {\n  constructor(_host) {\n    if (_host) {\n      this._target = _host;\n      this._createLogger(_host);\n      this._requests = hostRequestQueue(_host);\n    } else {\n      this._requests = new RequestQueue();\n    }\n  }\n  startLoading(triggerEvent) {\n    this._dispatchRequest(\"vds-start-loading\", { triggerEvent });\n  }\n  play(triggerEvent) {\n    this._dispatchRequest(\"vds-play-request\", { triggerEvent });\n  }\n  pause(triggerEvent) {\n    this._dispatchRequest(\"vds-pause-request\", { triggerEvent });\n  }\n  mute(triggerEvent) {\n    this._dispatchRequest(\"vds-mute-request\", { triggerEvent });\n  }\n  unmute(triggerEvent) {\n    this._dispatchRequest(\"vds-unmute-request\", { triggerEvent });\n  }\n  enterFullscreen(target, triggerEvent) {\n    this._dispatchRequest(\"vds-enter-fullscreen-request\", {\n      triggerEvent,\n      detail: target\n    });\n  }\n  exitFullscreen(target, triggerEvent) {\n    this._dispatchRequest(\"vds-exit-fullscreen-request\", {\n      triggerEvent,\n      detail: target\n    });\n  }\n  seeking(time, triggerEvent) {\n    this._dispatchRequest(\"vds-seeking-request\", {\n      detail: time,\n      triggerEvent\n    });\n  }\n  seek(time, triggerEvent) {\n    this._dispatchRequest(\"vds-seek-request\", {\n      detail: time,\n      triggerEvent\n    });\n  }\n  changeVolume(volume, triggerEvent) {\n    this._dispatchRequest(\"vds-volume-change-request\", {\n      detail: volume,\n      triggerEvent\n    });\n  }\n  resumeUserIdle(triggerEvent) {\n    this._dispatchRequest(\"vds-resume-user-idle-request\", { triggerEvent });\n  }\n  pauseUserIdle(triggerEvent) {\n    this._dispatchRequest(\"vds-pause-user-idle-request\", { triggerEvent });\n  }\n  showPoster(triggerEvent) {\n    this._dispatchRequest(\"vds-show-poster-request\", { triggerEvent });\n  }\n  hidePoster(triggerEvent) {\n    this._dispatchRequest(\"vds-hide-poster-request\", { triggerEvent });\n  }\n  setTarget(target) {\n    if (this._target === target)\n      return;\n    this._target = target;\n    if (target) {\n      this._createLogger(target);\n      this._requests.start();\n    } else {\n      this._requests.stop();\n    }\n  }\n  _dispatchRequest(type, eventInit) {\n    this._requests.queue(type, () => {\n      const request = vdsEvent(type, {\n        ...eventInit,\n        bubbles: true,\n        composed: true\n      });\n      if (true) {\n        this._logger?.infoGroup(`\\u{1F4E8} dispatching \\`${type}\\``).labelledLog(\"Request Event\", request).labelledLog(\"Trigger Event\", eventInit.triggerEvent).dispatch();\n      }\n      this._target?.dispatchEvent(request);\n    });\n  }\n  _createLogger(target) {\n    if (true) {\n      this._logger = new LogDispatcher(target);\n    }\n  }\n};\n\nexport {\n  MediaRemoteControl\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}