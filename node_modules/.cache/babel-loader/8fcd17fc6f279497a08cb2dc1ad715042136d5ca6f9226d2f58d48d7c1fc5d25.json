{"ast":null,"code":"import { __decorateClass } from \"./chunk.LNH2V2XS.js\";\n\n// src/ui/toggle-button/ToggleButtonElement.ts\nimport { eventListener, focusVisiblePolyfill, isKeyboardClick, isKeyboardEvent, logElementLifecycle, setAttribute, setAttributeIfEmpty } from \"@vidstack/foundation\";\nimport { html, LitElement } from \"lit\";\nimport { property } from \"lit/decorators.js\";\n\n// src/ui/toggle-button/styles.ts\nimport { css } from \"lit\";\nvar toggleButtonElementStyles = css`\n  :host {\n    display: table;\n    contain: content;\n    user-select: none;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  :host([hidden]) {\n    display: none;\n  }\n\n  :host(:focus) {\n    outline: none;\n  }\n  :host(:focus-visible) {\n    outline: 1px auto Highlight;\n    outline: 1px auto -webkit-focus-ring-color;\n  }\n  :host(.focus-visible) {\n    outline: 1px auto Highlight;\n    outline: 1px auto -webkit-focus-ring-color;\n  }\n`;\n\n// src/ui/toggle-button/ToggleButtonElement.ts\nvar ToggleButtonElement = class extends LitElement {\n  constructor() {\n    super();\n    this.pressed = false;\n    this.disabled = false;\n    this._handleButtonClickCapture = eventListener(this, \"click\", event => {\n      if (this.disabled) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    }, {\n      capture: true\n    });\n    if (true) logElementLifecycle(this);\n    focusVisiblePolyfill(this);\n    [\"pointerup\", \"keydown\"].forEach(eventType => {\n      eventListener(this, eventType, event => {\n        if (this.disabled || isKeyboardEvent(event) && !isKeyboardClick(event)) {\n          return;\n        }\n        this._handleButtonClick(event);\n      });\n    });\n  }\n  static get styles() {\n    return [toggleButtonElementStyles];\n  }\n  static get parts() {\n    return [];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    setAttributeIfEmpty(this, \"tabindex\", \"0\");\n    setAttributeIfEmpty(this, \"role\", \"button\");\n    this._updateAriaPressedAttr();\n  }\n  updated(changedProperties) {\n    if (changedProperties.has(\"pressed\")) {\n      this._updateAriaPressedAttr();\n    }\n  }\n  _updateAriaPressedAttr() {\n    setAttribute(this, \"aria-pressed\", this.pressed ? \"true\" : \"false\");\n  }\n  render() {\n    return this._renderDefaultSlot();\n  }\n  _renderDefaultSlot() {\n    return html`<slot></slot>`;\n  }\n  _handleButtonClick(event) {\n    this.pressed = !this.pressed;\n  }\n};\n__decorateClass([property({\n  type: Boolean\n})], ToggleButtonElement.prototype, \"pressed\", 2);\n__decorateClass([property({\n  type: Boolean,\n  reflect: true\n})], ToggleButtonElement.prototype, \"disabled\", 2);\nexport { ToggleButtonElement };","map":{"version":3,"names":["__decorateClass","eventListener","focusVisiblePolyfill","isKeyboardClick","isKeyboardEvent","logElementLifecycle","setAttribute","setAttributeIfEmpty","html","LitElement","property","css","toggleButtonElementStyles","ToggleButtonElement","constructor","pressed","disabled","_handleButtonClickCapture","event","preventDefault","stopImmediatePropagation","capture","forEach","eventType","_handleButtonClick","styles","parts","connectedCallback","_updateAriaPressedAttr","updated","changedProperties","has","render","_renderDefaultSlot","type","Boolean","prototype","reflect"],"sources":["/Users/andrewkallmeyer/kall.com/node_modules/@vidstack/player/dist/dev/chunks/chunk.EZDBIN3S.js"],"sourcesContent":["import {\n  __decorateClass\n} from \"./chunk.LNH2V2XS.js\";\n\n// src/ui/toggle-button/ToggleButtonElement.ts\nimport {\n  eventListener,\n  focusVisiblePolyfill,\n  isKeyboardClick,\n  isKeyboardEvent,\n  logElementLifecycle,\n  setAttribute,\n  setAttributeIfEmpty\n} from \"@vidstack/foundation\";\nimport {\n  html,\n  LitElement\n} from \"lit\";\nimport { property } from \"lit/decorators.js\";\n\n// src/ui/toggle-button/styles.ts\nimport { css } from \"lit\";\nvar toggleButtonElementStyles = css`\n  :host {\n    display: table;\n    contain: content;\n    user-select: none;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  :host([hidden]) {\n    display: none;\n  }\n\n  :host(:focus) {\n    outline: none;\n  }\n  :host(:focus-visible) {\n    outline: 1px auto Highlight;\n    outline: 1px auto -webkit-focus-ring-color;\n  }\n  :host(.focus-visible) {\n    outline: 1px auto Highlight;\n    outline: 1px auto -webkit-focus-ring-color;\n  }\n`;\n\n// src/ui/toggle-button/ToggleButtonElement.ts\nvar ToggleButtonElement = class extends LitElement {\n  constructor() {\n    super();\n    this.pressed = false;\n    this.disabled = false;\n    this._handleButtonClickCapture = eventListener(\n      this,\n      \"click\",\n      (event) => {\n        if (this.disabled) {\n          event.preventDefault();\n          event.stopImmediatePropagation();\n        }\n      },\n      { capture: true }\n    );\n    if (true)\n      logElementLifecycle(this);\n    focusVisiblePolyfill(this);\n    [\"pointerup\", \"keydown\"].forEach((eventType) => {\n      eventListener(this, eventType, (event) => {\n        if (this.disabled || isKeyboardEvent(event) && !isKeyboardClick(event)) {\n          return;\n        }\n        this._handleButtonClick(event);\n      });\n    });\n  }\n  static get styles() {\n    return [toggleButtonElementStyles];\n  }\n  static get parts() {\n    return [];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    setAttributeIfEmpty(this, \"tabindex\", \"0\");\n    setAttributeIfEmpty(this, \"role\", \"button\");\n    this._updateAriaPressedAttr();\n  }\n  updated(changedProperties) {\n    if (changedProperties.has(\"pressed\")) {\n      this._updateAriaPressedAttr();\n    }\n  }\n  _updateAriaPressedAttr() {\n    setAttribute(this, \"aria-pressed\", this.pressed ? \"true\" : \"false\");\n  }\n  render() {\n    return this._renderDefaultSlot();\n  }\n  _renderDefaultSlot() {\n    return html`<slot></slot>`;\n  }\n  _handleButtonClick(event) {\n    this.pressed = !this.pressed;\n  }\n};\n__decorateClass([\n  property({ type: Boolean })\n], ToggleButtonElement.prototype, \"pressed\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], ToggleButtonElement.prototype, \"disabled\", 2);\n\nexport {\n  ToggleButtonElement\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}