{"ast":null,"code":"import { mediaProviderDiscoveryId } from \"./chunk.BJN6YOPG.js\";\nimport { __decorateClass } from \"./chunk.LNH2V2XS.js\";\n\n// src/media/manage/MediaSyncElement.ts\nimport { debounce, discover, DisposalBin, listen, vdsEvent } from \"@vidstack/foundation\";\nimport { css, html, LitElement } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nvar mediaProviders = /* @__PURE__ */new Set();\nvar syncingMediaPlayback = false;\nvar syncingMediaVolume = false;\nvar MediaSyncElement = class extends LitElement {\n  constructor() {\n    super();\n    this.singlePlayback = false;\n    this.syncVolume = false;\n    this._providerDisposal = new DisposalBin();\n    discover(this, mediaProviderDiscoveryId, (provider, onDisconnect) => {\n      this._handleMediaProviderConnect(provider, onDisconnect);\n    });\n  }\n  static get styles() {\n    return css`\n      :host {\n        display: contents;\n      }\n    `;\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._providerDisposal.empty();\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n  get provider() {\n    return this._provider;\n  }\n  _handleMediaProviderConnect(provider, onDisconnect) {\n    this._provider = provider;\n    mediaProviders.add(provider);\n    const savedVolume = this._getSavedMediaVolume();\n    if (savedVolume) {\n      this._provider.volume = savedVolume.volume;\n      this._provider.muted = savedVolume.muted;\n    }\n    if (this.singlePlayback) {\n      const off = listen(provider, \"vds-play\", this._handleMediaPlay.bind(this));\n      this._providerDisposal.add(off);\n    }\n    if (this.syncVolume) {\n      const off = listen(provider, \"vds-volume-change\", debounce(this._handleMediaVolumeChange.bind(this), 10, true));\n      this._providerDisposal.add(off);\n    }\n    if (this.volumeStorageKey) {\n      const off = listen(provider, \"vds-volume-change\", this._saveMediaVolume.bind(this));\n      this._providerDisposal.add(off);\n    }\n    onDisconnect(() => {\n      mediaProviders.delete(provider);\n      this._provider = void 0;\n      this._providerDisposal.empty();\n    });\n  }\n  _handleMediaPlay() {\n    if (syncingMediaPlayback) return;\n    syncingMediaPlayback = true;\n    mediaProviders.forEach(provider => {\n      if (provider !== this._provider) {\n        provider.paused = true;\n      }\n    });\n    syncingMediaPlayback = false;\n  }\n  _handleMediaVolumeChange(event) {\n    if (syncingMediaVolume) return;\n    syncingMediaVolume = true;\n    const {\n      volume,\n      muted\n    } = event.detail;\n    mediaProviders.forEach(provider => {\n      if (provider !== this._provider) {\n        provider.volume = volume;\n        provider.muted = muted;\n      }\n    });\n    this.dispatchEvent(vdsEvent(\"vds-media-volume-sync\", {\n      bubbles: true,\n      composed: true,\n      detail: event.detail\n    }));\n    syncingMediaVolume = false;\n  }\n  _getSavedMediaVolume() {\n    if (!this.volumeStorageKey) return;\n    try {\n      return JSON.parse(localStorage.getItem(this.volumeStorageKey));\n    } catch (e) {\n      return void 0;\n    }\n  }\n  _saveMediaVolume(event) {\n    if (!this.volumeStorageKey) return;\n    localStorage.setItem(this.volumeStorageKey, JSON.stringify(event.detail));\n  }\n};\n__decorateClass([property({\n  type: Boolean,\n  attribute: \"single-playback\"\n})], MediaSyncElement.prototype, \"singlePlayback\", 2);\n__decorateClass([property({\n  type: Boolean,\n  attribute: \"sync-volume\"\n})], MediaSyncElement.prototype, \"syncVolume\", 2);\n__decorateClass([property({\n  attribute: \"volume-storage-key\"\n})], MediaSyncElement.prototype, \"volumeStorageKey\", 2);\nexport { MediaSyncElement };","map":{"version":3,"names":["mediaProviderDiscoveryId","__decorateClass","debounce","discover","DisposalBin","listen","vdsEvent","css","html","LitElement","property","mediaProviders","Set","syncingMediaPlayback","syncingMediaVolume","MediaSyncElement","constructor","singlePlayback","syncVolume","_providerDisposal","provider","onDisconnect","_handleMediaProviderConnect","styles","disconnectedCallback","empty","render","_provider","add","savedVolume","_getSavedMediaVolume","volume","muted","off","_handleMediaPlay","bind","_handleMediaVolumeChange","volumeStorageKey","_saveMediaVolume","delete","forEach","paused","event","detail","dispatchEvent","bubbles","composed","JSON","parse","localStorage","getItem","e","setItem","stringify","type","Boolean","attribute","prototype"],"sources":["/Users/andrewkallmeyer/kall.com/node_modules/@vidstack/player/dist/dev/chunks/chunk.EBAL4TQS.js"],"sourcesContent":["import {\n  mediaProviderDiscoveryId\n} from \"./chunk.BJN6YOPG.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LNH2V2XS.js\";\n\n// src/media/manage/MediaSyncElement.ts\nimport {\n  debounce,\n  discover,\n  DisposalBin,\n  listen,\n  vdsEvent\n} from \"@vidstack/foundation\";\nimport { css, html, LitElement } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nvar mediaProviders = /* @__PURE__ */ new Set();\nvar syncingMediaPlayback = false;\nvar syncingMediaVolume = false;\nvar MediaSyncElement = class extends LitElement {\n  constructor() {\n    super();\n    this.singlePlayback = false;\n    this.syncVolume = false;\n    this._providerDisposal = new DisposalBin();\n    discover(this, mediaProviderDiscoveryId, (provider, onDisconnect) => {\n      this._handleMediaProviderConnect(provider, onDisconnect);\n    });\n  }\n  static get styles() {\n    return css`\n      :host {\n        display: contents;\n      }\n    `;\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._providerDisposal.empty();\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n  get provider() {\n    return this._provider;\n  }\n  _handleMediaProviderConnect(provider, onDisconnect) {\n    this._provider = provider;\n    mediaProviders.add(provider);\n    const savedVolume = this._getSavedMediaVolume();\n    if (savedVolume) {\n      this._provider.volume = savedVolume.volume;\n      this._provider.muted = savedVolume.muted;\n    }\n    if (this.singlePlayback) {\n      const off = listen(provider, \"vds-play\", this._handleMediaPlay.bind(this));\n      this._providerDisposal.add(off);\n    }\n    if (this.syncVolume) {\n      const off = listen(\n        provider,\n        \"vds-volume-change\",\n        debounce(this._handleMediaVolumeChange.bind(this), 10, true)\n      );\n      this._providerDisposal.add(off);\n    }\n    if (this.volumeStorageKey) {\n      const off = listen(provider, \"vds-volume-change\", this._saveMediaVolume.bind(this));\n      this._providerDisposal.add(off);\n    }\n    onDisconnect(() => {\n      mediaProviders.delete(provider);\n      this._provider = void 0;\n      this._providerDisposal.empty();\n    });\n  }\n  _handleMediaPlay() {\n    if (syncingMediaPlayback)\n      return;\n    syncingMediaPlayback = true;\n    mediaProviders.forEach((provider) => {\n      if (provider !== this._provider) {\n        provider.paused = true;\n      }\n    });\n    syncingMediaPlayback = false;\n  }\n  _handleMediaVolumeChange(event) {\n    if (syncingMediaVolume)\n      return;\n    syncingMediaVolume = true;\n    const { volume, muted } = event.detail;\n    mediaProviders.forEach((provider) => {\n      if (provider !== this._provider) {\n        provider.volume = volume;\n        provider.muted = muted;\n      }\n    });\n    this.dispatchEvent(\n      vdsEvent(\"vds-media-volume-sync\", {\n        bubbles: true,\n        composed: true,\n        detail: event.detail\n      })\n    );\n    syncingMediaVolume = false;\n  }\n  _getSavedMediaVolume() {\n    if (!this.volumeStorageKey)\n      return;\n    try {\n      return JSON.parse(localStorage.getItem(this.volumeStorageKey));\n    } catch (e) {\n      return void 0;\n    }\n  }\n  _saveMediaVolume(event) {\n    if (!this.volumeStorageKey)\n      return;\n    localStorage.setItem(this.volumeStorageKey, JSON.stringify(event.detail));\n  }\n};\n__decorateClass([\n  property({ type: Boolean, attribute: \"single-playback\" })\n], MediaSyncElement.prototype, \"singlePlayback\", 2);\n__decorateClass([\n  property({ type: Boolean, attribute: \"sync-volume\" })\n], MediaSyncElement.prototype, \"syncVolume\", 2);\n__decorateClass([\n  property({ attribute: \"volume-storage-key\" })\n], MediaSyncElement.prototype, \"volumeStorageKey\", 2);\n\nexport {\n  MediaSyncElement\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}