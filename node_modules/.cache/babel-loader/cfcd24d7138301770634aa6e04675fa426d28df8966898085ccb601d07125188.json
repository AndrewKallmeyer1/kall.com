{"ast":null,"code":"import { Html5MediaElement } from \"./chunk.RVJZRTLD.js\";\n\n// src/providers/video/fullscreen/VideoFullscreenController.ts\nimport { FullscreenController, listen, noop } from \"@vidstack/foundation\";\nvar VideoFullscreenController = class extends FullscreenController {\n  constructor(host, screenOrientationController, _presentationController) {\n    super(host, screenOrientationController);\n    this._presentationController = _presentationController;\n  }\n  get isFullscreen() {\n    return this.isSupportedNatively ? this.isNativeFullscreen : this._presentationController.isFullscreenMode;\n  }\n  get isSupported() {\n    return this.isSupportedNatively || this.isSupportedOnSafari;\n  }\n  get isSupportedOnSafari() {\n    return this._presentationController.isSupported;\n  }\n  async _makeEnterFullscreenRequest() {\n    return this.isSupportedNatively ? super._makeEnterFullscreenRequest() : this._makeFullscreenRequestOnSafari();\n  }\n  async _makeFullscreenRequestOnSafari() {\n    return this._presentationController.setPresentationMode(\"fullscreen\");\n  }\n  async _makeExitFullscreenRequest() {\n    return this.isSupportedNatively ? super._makeExitFullscreenRequest() : this._makeExitFullscreenRequestOnSafari();\n  }\n  async _makeExitFullscreenRequestOnSafari() {\n    return this._presentationController.setPresentationMode(\"inline\");\n  }\n  _addFullscreenChangeEventListener(handler) {\n    if (this.isSupportedNatively) {\n      return super._addFullscreenChangeEventListener(handler);\n    }\n    if (this.isSupportedOnSafari) {\n      if (true) {\n        this._logger?.debug(\"adding `vds-video-presentation-change` listener\");\n      }\n      return listen(this._host, \"vds-video-presentation-change\", this._handlePresentationModeChange.bind(this));\n    }\n    return noop;\n  }\n  _handlePresentationModeChange(event) {\n    this._handleFullscreenChange(event);\n  }\n  _addFullscreenErrorEventListener(handler) {\n    if (!this.isSupportedNatively) return noop;\n    return super._addFullscreenErrorEventListener(handler);\n  }\n};\n\n// src/providers/video/presentation/VideoPresentationController.ts\nimport { DisposalBin, isFunction, isNil, listen as listen2, LogDispatcher, noop as noop2, redispatchEvent, vdsEvent } from \"@vidstack/foundation\";\nvar VideoPresentationController = class {\n  constructor(_host) {\n    this._host = _host;\n    this._logger = true ? new LogDispatcher(this._host) : void 0;\n    this._listenerDisposal = new DisposalBin();\n    const firstUpdated = _host.firstUpdated;\n    _host.firstUpdated = changedProperties => {\n      firstUpdated?.call(_host, changedProperties);\n      this._listenerDisposal.add(this._addPresentationModeChangeEventListener());\n    };\n    _host.addController({\n      hostDisconnected: this._handleHostDisconnected.bind(this)\n    });\n  }\n  _handleHostDisconnected() {\n    this.setPresentationMode(\"inline\");\n    this._listenerDisposal.empty();\n  }\n  get presentationMode() {\n    return this._host.videoElement?.webkitPresentationMode;\n  }\n  get isInlineMode() {\n    return this.presentationMode === \"inline\";\n  }\n  get isPictureInPictureMode() {\n    return this.presentationMode === \"inline\";\n  }\n  get isFullscreenMode() {\n    return this.presentationMode === \"fullscreen\";\n  }\n  get isSupported() {\n    return isFunction(this._host.videoElement?.webkitSetPresentationMode);\n  }\n  setPresentationMode(mode) {\n    this._host.videoElement?.webkitSetPresentationMode?.(mode);\n  }\n  _addPresentationModeChangeEventListener() {\n    if (!this.isSupported || isNil(this._host.videoElement)) return noop2;\n    if (true) {\n      this._logger?.debug(\"adding `webkitpresentationmodechanged` listener\");\n    }\n    return listen2(this._host.videoElement, \"webkitpresentationmodechanged\", this._handlePresentationModeChange.bind(this));\n  }\n  _handlePresentationModeChange(event) {\n    if (true) {\n      this._logger?.infoGroup(\"presentation mode change\").labelledLog(\"Event\", event).dispatch();\n    }\n    redispatchEvent(this._host, event);\n    this._host.dispatchEvent(vdsEvent(\"vds-video-presentation-change\", {\n      detail: this.presentationMode,\n      triggerEvent: event\n    }));\n  }\n};\n\n// src/providers/video/VideoElement.ts\nimport { vdsEvent as vdsEvent2 } from \"@vidstack/foundation\";\nimport { css } from \"lit\";\nvar VideoElement = class extends Html5MediaElement {\n  constructor() {\n    super(...arguments);\n    this.presentationController = new VideoPresentationController(this);\n    this.fullscreenController = new VideoFullscreenController(this, this.screenOrientationController, this.presentationController);\n  }\n  static get styles() {\n    return [css`\n        :host {\n          display: inline-block;\n          background-color: var(--vds-video-bg-color, #000);\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n\n        ::slotted(video:not([width])) {\n          width: var(--vds-video-width, 100%);\n        }\n\n        ::slotted(video:not([height])) {\n          height: var(--vds-video-height, auto);\n        }\n      `];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(vdsEvent2(\"vds-view-type-change\", {\n      detail: \"video\" /* Video */\n    }));\n  }\n  get videoElement() {\n    return this.mediaElement;\n  }\n};\nexport { VideoFullscreenController, VideoPresentationController, VideoElement };","map":{"version":3,"names":["Html5MediaElement","FullscreenController","listen","noop","VideoFullscreenController","constructor","host","screenOrientationController","_presentationController","isFullscreen","isSupportedNatively","isNativeFullscreen","isFullscreenMode","isSupported","isSupportedOnSafari","_makeEnterFullscreenRequest","_makeFullscreenRequestOnSafari","setPresentationMode","_makeExitFullscreenRequest","_makeExitFullscreenRequestOnSafari","_addFullscreenChangeEventListener","handler","_logger","debug","_host","_handlePresentationModeChange","bind","event","_handleFullscreenChange","_addFullscreenErrorEventListener","DisposalBin","isFunction","isNil","listen2","LogDispatcher","noop2","redispatchEvent","vdsEvent","VideoPresentationController","_listenerDisposal","firstUpdated","changedProperties","call","add","_addPresentationModeChangeEventListener","addController","hostDisconnected","_handleHostDisconnected","empty","presentationMode","videoElement","webkitPresentationMode","isInlineMode","isPictureInPictureMode","webkitSetPresentationMode","mode","infoGroup","labelledLog","dispatch","dispatchEvent","detail","triggerEvent","vdsEvent2","css","VideoElement","arguments","presentationController","fullscreenController","styles","connectedCallback","mediaElement"],"sources":["/Users/andrewkallmeyer/kall.com/node_modules/@vidstack/player/dist/dev/chunks/chunk.WWUUJDIN.js"],"sourcesContent":["import {\n  Html5MediaElement\n} from \"./chunk.RVJZRTLD.js\";\n\n// src/providers/video/fullscreen/VideoFullscreenController.ts\nimport {\n  FullscreenController,\n  listen,\n  noop\n} from \"@vidstack/foundation\";\nvar VideoFullscreenController = class extends FullscreenController {\n  constructor(host, screenOrientationController, _presentationController) {\n    super(host, screenOrientationController);\n    this._presentationController = _presentationController;\n  }\n  get isFullscreen() {\n    return this.isSupportedNatively ? this.isNativeFullscreen : this._presentationController.isFullscreenMode;\n  }\n  get isSupported() {\n    return this.isSupportedNatively || this.isSupportedOnSafari;\n  }\n  get isSupportedOnSafari() {\n    return this._presentationController.isSupported;\n  }\n  async _makeEnterFullscreenRequest() {\n    return this.isSupportedNatively ? super._makeEnterFullscreenRequest() : this._makeFullscreenRequestOnSafari();\n  }\n  async _makeFullscreenRequestOnSafari() {\n    return this._presentationController.setPresentationMode(\"fullscreen\");\n  }\n  async _makeExitFullscreenRequest() {\n    return this.isSupportedNatively ? super._makeExitFullscreenRequest() : this._makeExitFullscreenRequestOnSafari();\n  }\n  async _makeExitFullscreenRequestOnSafari() {\n    return this._presentationController.setPresentationMode(\"inline\");\n  }\n  _addFullscreenChangeEventListener(handler) {\n    if (this.isSupportedNatively) {\n      return super._addFullscreenChangeEventListener(handler);\n    }\n    if (this.isSupportedOnSafari) {\n      if (true) {\n        this._logger?.debug(\"adding `vds-video-presentation-change` listener\");\n      }\n      return listen(\n        this._host,\n        \"vds-video-presentation-change\",\n        this._handlePresentationModeChange.bind(this)\n      );\n    }\n    return noop;\n  }\n  _handlePresentationModeChange(event) {\n    this._handleFullscreenChange(event);\n  }\n  _addFullscreenErrorEventListener(handler) {\n    if (!this.isSupportedNatively)\n      return noop;\n    return super._addFullscreenErrorEventListener(handler);\n  }\n};\n\n// src/providers/video/presentation/VideoPresentationController.ts\nimport {\n  DisposalBin,\n  isFunction,\n  isNil,\n  listen as listen2,\n  LogDispatcher,\n  noop as noop2,\n  redispatchEvent,\n  vdsEvent\n} from \"@vidstack/foundation\";\nvar VideoPresentationController = class {\n  constructor(_host) {\n    this._host = _host;\n    this._logger = true ? new LogDispatcher(this._host) : void 0;\n    this._listenerDisposal = new DisposalBin();\n    const firstUpdated = _host.firstUpdated;\n    _host.firstUpdated = (changedProperties) => {\n      firstUpdated?.call(_host, changedProperties);\n      this._listenerDisposal.add(this._addPresentationModeChangeEventListener());\n    };\n    _host.addController({\n      hostDisconnected: this._handleHostDisconnected.bind(this)\n    });\n  }\n  _handleHostDisconnected() {\n    this.setPresentationMode(\"inline\");\n    this._listenerDisposal.empty();\n  }\n  get presentationMode() {\n    return this._host.videoElement?.webkitPresentationMode;\n  }\n  get isInlineMode() {\n    return this.presentationMode === \"inline\";\n  }\n  get isPictureInPictureMode() {\n    return this.presentationMode === \"inline\";\n  }\n  get isFullscreenMode() {\n    return this.presentationMode === \"fullscreen\";\n  }\n  get isSupported() {\n    return isFunction(this._host.videoElement?.webkitSetPresentationMode);\n  }\n  setPresentationMode(mode) {\n    this._host.videoElement?.webkitSetPresentationMode?.(mode);\n  }\n  _addPresentationModeChangeEventListener() {\n    if (!this.isSupported || isNil(this._host.videoElement))\n      return noop2;\n    if (true) {\n      this._logger?.debug(\"adding `webkitpresentationmodechanged` listener\");\n    }\n    return listen2(\n      this._host.videoElement,\n      \"webkitpresentationmodechanged\",\n      this._handlePresentationModeChange.bind(this)\n    );\n  }\n  _handlePresentationModeChange(event) {\n    if (true) {\n      this._logger?.infoGroup(\"presentation mode change\").labelledLog(\"Event\", event).dispatch();\n    }\n    redispatchEvent(this._host, event);\n    this._host.dispatchEvent(\n      vdsEvent(\"vds-video-presentation-change\", {\n        detail: this.presentationMode,\n        triggerEvent: event\n      })\n    );\n  }\n};\n\n// src/providers/video/VideoElement.ts\nimport { vdsEvent as vdsEvent2 } from \"@vidstack/foundation\";\nimport { css } from \"lit\";\nvar VideoElement = class extends Html5MediaElement {\n  constructor() {\n    super(...arguments);\n    this.presentationController = new VideoPresentationController(this);\n    this.fullscreenController = new VideoFullscreenController(\n      this,\n      this.screenOrientationController,\n      this.presentationController\n    );\n  }\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: inline-block;\n          background-color: var(--vds-video-bg-color, #000);\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n\n        ::slotted(video:not([width])) {\n          width: var(--vds-video-width, 100%);\n        }\n\n        ::slotted(video:not([height])) {\n          height: var(--vds-video-height, auto);\n        }\n      `\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.dispatchEvent(\n      vdsEvent2(\"vds-view-type-change\", {\n        detail: \"video\" /* Video */\n      })\n    );\n  }\n  get videoElement() {\n    return this.mediaElement;\n  }\n};\n\nexport {\n  VideoFullscreenController,\n  VideoPresentationController,\n  VideoElement\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}